name: CI/CD - Management Service

on:
  workflow_dispatch:
  push:
    branches:
      - development
    paths:
      - .github/workflows/ci-cd-api-service.yml
      - packages/service/**/*

concurrency:
  group: ci-cd-${{ github.ref }}

jobs:
  ci-image:
    name: "Container Image - Build and Push"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Infisical env-slug
        env:
          SLUG_DEV: ${{ secrets.INFISICAL_ENV_SLUG_DEV }}
          SLUG_PROD: ${{ secrets.INFISICAL_ENV_SLUG_PROD }}
        run: |
          if [[ $GITHUB_REF_NAME == 'production' ]]; then
            echo "INFISICAL_ENV_SLUG=${SLUG_PROD}" >> "$GITHUB_ENV"
          else
            echo "INFISICAL_ENV_SLUG=${SLUG_DEV}" >> "$GITHUB_ENV"
          fi

      - uses: Infisical/secrets-action@v1.0.12
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}

          project-slug: ${{ secrets.INFISICAL_API_PROJECT_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_API_BUILD_PUSH }}
          env-slug: ${{ env.INFISICAL_ENV_SLUG }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login into Registry
        if: ${{ inputs.push-image == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Build and push container image to the registry
        uses: docker/build-push-action@v6
        with:
          context: ./packages/service
          target: "runtime"
          tags: ${{ env.REGISTRY_URL }}/${{ github.ref_name }}:${{ env.IMAGE_NAME  }}
          push: true
          load: false
          no-cache: false

  cd-cluster:
    name: Deploy to Cluster @ladesa-ro/api.service

    runs-on: deploy
    needs: [ci-image]

    environment:
      name: ${{ github.ref_name == 'development' && 'development' || 'production' }}
      url: ${{ vars.DEPLOY_URL }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: determine infisical env-slug
        env:
          SLUG_DEV: ${{ secrets.INFISICAL_ENV_SLUG_DEV }}
          SLUG_PROD: ${{ secrets.INFISICAL_ENV_SLUG_PROD }}
        run: |
          if [[ $GITHUB_REF_NAME == 'production' ]]; then
            echo "INFISICAL_ENV_SLUG=${SLUG_PROD}" >> "$GITHUB_ENV"
          else
            echo "INFISICAL_ENV_SLUG=${SLUG_DEV}" >> "$GITHUB_ENV"
          fi

      - uses: Infisical/secrets-action@v1.0.12
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}

          project-slug: ${{ secrets.INFISICAL_API_PROJECT_SLUG }}

          env-slug: ${{ env.INFISICAL_ENV_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_API_DEPLOY }}

      - uses: ladesa-ro/esteira-ci-cd/actions/deploy-k8s-stakater-application@main
        with:
          helm-values: ${{ env.DEPLOY_HELM_VALUES }}
          deployment: ${{ env.K8S_DEPLOYMENT }}
          namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.K8S_DEPLOYMENT }}
          helm-release-extra-options: ${{ env.DEPLOY_HELM_EXTRA_OPTIONS }}
