name: Continuos Deployment - API

on:
  workflow_dispatch:
  push:
    branches:
      - development

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci-image:
    name: "Container Image - Build and Push"
    runs-on: ubuntu-latest

    concurrency:
      group: cd-${{ github.ref }}-build
      cancel-in-progress: false

    steps:
      - name: determine infisical env-slug
        id: infisical-env-slug
        env:
          SLUG_DEV: ${{ secrets.INFISICAL_ENV_SLUG_DEV }}
          SLUG_PROD: ${{ secrets.INFISICAL_ENV_SLUG_PROD }}
        run: |
          if [[ $GITHUB_REF_NAME == 'production' ]]; then
            echo "INFISICAL_ENV_SLUG=${SLUG_PROD}" >> "$GITHUB_ENV"
          else
            echo "INFISICAL_ENV_SLUG=${SLUG_DEV}" >> "$GITHUB_ENV"
          fi

      - uses: Infisical/secrets-action@v1.0.7
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}
          project-slug: ${{ secrets.INFISICAL_API_PROJECT_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_API_BUILD_PUSH }}
          env-slug: ${{ env.INFISICAL_ENV_SLUG }}

      - uses: ladesa-ro/esteira-ci-cd/actions/prepare-images-builder@main
        with:
          setup-qemu: "false"
          push-image: "true"

          push-image-registry-url: ${{ env.REGISTRY_URL }}
          push-image-registry-username: ${{ env.REGISTRY_USERNAME }}
          push-image-registry-token: ${{ env.REGISTRY_TOKEN }}

      - name: Build and push api-service-runtime
        uses: ladesa-ro/esteira-ci-cd/actions/image-build-push@main
        with:
          image-tag: ${{ github.ref_name }}
          image-name: ${{ env.IMAGE_NAME  }}

          build-image: "true"
          build-target-tag: "api-service-runtime"

          push-image: "true"
          push-image-registry-url: ${{ env.REGISTRY_URL }}

          load-image: "true"

      - name: Generate OpenAPI JSON artifact
        env:
          GENERATED_IMAGE: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME  }}:${{ github.ref_name }}
        run: |
          docker run -v $(pwd)/output:/tmp/output --env OUT_FILE=/tmp/output/generated.json --rm ${GENERATED_IMAGE} npm run generate:openapi

      - name: "Upload artifacts: Generated OpenAPI JSON artifact"
        uses: actions/upload-artifact@v4
        with:
          name: generated-openapi-json
          retention-days: 3
          path: output/generated.json

  cd-cluster:
    name: Deploy to Cluster @ladesa-ro/api.service

    runs-on: deploy
    needs: [ci-image]

    environment:
      name: ${{ github.ref_name == 'development' && 'development' || 'production' }}
      url: ${{ vars.DEPLOY_URL }}

    steps:
      - name: determine infisical env-slug
        id: infisical-env-slug
        env:
          SLUG_DEV: ${{ secrets.INFISICAL_ENV_SLUG_DEV }}
          SLUG_PROD: ${{ secrets.INFISICAL_ENV_SLUG_PROD }}
        run: |
          if [[ $GITHUB_REF_NAME == 'production' ]]; then
            echo "INFISICAL_ENV_SLUG=${SLUG_PROD}" >> "$GITHUB_ENV"
          else
            echo "INFISICAL_ENV_SLUG=${SLUG_DEV}" >> "$GITHUB_ENV"
          fi

      - uses: Infisical/secrets-action@v1.0.7
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}
          project-slug: ${{ secrets.INFISICAL_API_PROJECT_SLUG }}

          env-slug: ${{ env.INFISICAL_ENV_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_API_DEPLOY }}

      - uses: ladesa-ro/esteira-ci-cd/actions/deploy-k8s-stakater-application@main
        with:
          helm-values: ${{ env.DEPLOY_HELM_VALUES }}
          deployment: ${{ env.K8S_DEPLOYMENT }}
          namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.K8S_DEPLOYMENT }}
          helm-release-extra-options: ${{ env.DEPLOY_HELM_EXTRA_OPTIONS }}

  ci-openapi:
    name: Generate OpenAPI JSON artifact
    runs-on: ubuntu-latest
    needs: [ci-image]

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: "Download artifacts: Generated OpenAPI JSON artifact"
        uses: actions/download-artifact@v4
        with:
          name: generated-openapi-json
          path: /tmp/artifacts/generated-openapi-json

      - name: Move Generated OpenAPI JSON artifact into integrations/openapi-json/generated.json
        run: mv /tmp/artifacts/generated-openapi-json/generated.json ./integrations/openapi-json/generated.json

      - name: Check if has changes
        run: |
          if git diff --quiet HEAD -- integrations/openapi-json/generated.json; then
            echo "no_changes=true" >> $GITHUB_ENV
          else
            echo "no_changes=false" >> $GITHUB_ENV
          fi

      - name: Set up Git
        if: env.no_changes == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit and push
        if: env.no_changes == 'false'
        run: |
          GENERATED_OPENAPI_JSON_FILE=integrations/openapi-json/generated.json

          git add ${GENERATED_OPENAPI_JSON_FILE};
          git commit -m "chore(integrations/openapi-json): automated update";

          if git show-ref --verify --quiet refs/heads/automated-ci/codegen-openapi-json; then
            git branch -D automated-ci/codegen-openapi-json
          fi

          git checkout -b automated-ci/codegen-openapi-json
          git push origin automated-ci/codegen-openapi-json --force

      - name: pull-request-action
        uses: vsoch/pull-request-action@1.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_UPDATE: true
          PULL_REQUEST_FROM_BRANCH: "automated-ci/codegen-openapi-json"
          PULL_REQUEST_BRANCH: "development"
          PULL_REQUEST_TITLE: "chore(integrations/openapi-json): update generated.json"
