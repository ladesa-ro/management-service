name: CI - Release

on:
  workflow_dispatch:
  push:
    branches:
      - development

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}

jobs:
  code-quality:
    uses: ./.github/workflows/quality.yml

  release:
    name: Release
    needs: [code-quality]

    runs-on: ubuntu-latest

    outputs:
      published: ${{ steps.changesets.outputs.published }}
      published-packages: ${{ steps.changesets.outputs.publishedPackages  }}
      publish-npm: ${{ steps.changesets.outputs.published }}

    permissions:
      pages: read
      issues: write
      actions: write
      statuses: write
      contents: write
      pull-requests: write
      security-events: write

    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/actions/prepare/install
        with:
          install-bun: "true"

      - name: run changesets action
        uses: changesets/action@v1
        id: changesets
        with:
          setupGitUser: true
          createGithubReleases: false
          title: "chore: version packages"
          commit: "chore: version packages"
          publish: bun run changeset:tag
          version: bun run changeset:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_outputs:
    name: show the release job outputs
    runs-on: ubuntu-latest
    needs: [release]

    steps:
      - name: print outputs (for debug purposes only)
        run: echo '${{ toJSON(needs.release.outputs) }}'

  ci_npm:
    name: publish packages to the npm registry
    runs-on: ubuntu-latest

    needs: [release]
    if: needs.release.outputs.published == 'true' && needs.release.outputs.publish-npm == 'true'

    permissions:
      actions: read
      contents: write
      id-token: write

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: extract tag
        id: extract-tag
        run: |
          TAG=latest
          FILE=.changeset/pre.json

          if [ -f ${FILE} ]; then
            TAG=$(cat ${FILE} | jq .tag);
          fi

          echo tag: ${TAG}

          echo "TAG=${TAG}" >> $GITHUB_OUTPUT

      - name: publish packages to the npm registry
        uses: ./.github/actions/publish/npm
        with:
          tag: "${{ steps.extract-tag.outputs.tag }}"
          auth-token: "${{ secrets.NPM_TOKEN }}"
