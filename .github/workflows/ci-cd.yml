name: CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/ci-cd.yml
      - .devcontainer/ci-cd/**/*
      - k8s/**/*
      - packages/service/**/*

concurrency:
  group: ci-cd-${{ github.ref }}

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASENAME: ${{ github.repository }}

jobs:
  service-ci-image:
    name: "CI: Construção e Publicação da Imagem de Container"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    environment:
      name: ci-cd-management-service-dev

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Autenticação no GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Construção e publicação da imagem de contêiner
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          target: service-runtime
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service:development
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service:cache-development
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service:cache-development,mode=max

  service-cd-cluster:
    name: "CD: Implantação no Cluster Kubernetes"
    runs-on: deploy

    permissions:
      contents: read

    needs: [ service-ci-image ]

    environment:
      name: ci-cd-management-service-dev
      url: ${{ vars.DEPLOY_URL }}

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v5

      - name: Implantação da aplicação no Kubernetes
        shell: bash
        working-directory: ./k8s/development/
        run: bash ./deploy.sh

  devcontainer-prebuild:
    name: "CI: Prebuild devcontainer"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Autenticação no GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Prebuild devcontainer
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6
        with:
          imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service/devcontainer-gha
          runCmd: sleep 1
          push: always
          cacheFrom: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service/devcontainer-gha

  service-client-ci-npm:
    name: "CI: Construção e Publicação do Client NPM"
    runs-on: ubuntu-latest

    needs:
      - devcontainer-prebuild

    environment:
      name: ci-cd-management-service-dev

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout do código-fonte
        uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Execução do container de desenvolvimento
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6
        with:
          imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service/devcontainer-gha
          cacheFrom: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service/devcontainer-gha:cache
          cacheTo: ${{ env.REGISTRY }}/${{ env.IMAGE_BASENAME }}/management-service/devcontainer-gha:cache
          imageTag: latest
          inheritEnv: true
          env: |
            HOME=/home/happy
          configFile: .devcontainer/ci-cd/devcontainer.json
          push: never
          runCmd: |
            echo "=== Iniciando build do cliente NPM ==="
            bun run --filter '@ladesa-ro/management-service-client' build
            echo "=== Build do cliente NPM concluído ==="
            echo "=== Iniciando publicação do cliente NPM ==="
            npx pkg-pr-new publish --comment=update --packageManager="bun" './packages/integrations/npm/client-pkg'
            echo "=== Publicação do cliente NPM concluída ==="
