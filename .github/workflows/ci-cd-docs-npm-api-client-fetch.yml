name: CI/CD - docs/npm/api-client-fetch

on:
  workflow_dispatch:
  push:
    branches:
      - development
    paths:
      - .github/workflows/ci-cd-docs-npm-api-client-fetch.yml
      - packages/integrations/npm/api-client-fetch/docs-npm-api-client-fetch/**/*
      - packages/integrations/npm/api-client-fetch/**/*
      - packages/service/bun.lock
      - packages/service/bun.toml
      - package.json
      - Dockerfile*

concurrency:
  group: ci-cd-${{ github.ref }}

jobs:
  ci-image:
    name: "build and push"
    runs-on: ubuntu-latest

    environment:
      name: docs-npm-client-fetch

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: determine Infisical env-slug
        run: |
          echo "INFISICAL_ENV_SLUG=prod" >> "$GITHUB_ENV"

      - uses: Infisical/secrets-action@v1.0.12
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}

          project-slug: ${{ secrets.INFISICAL_DOCS_NPM_API_CLIENT_FETCH_PROJECT_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_DOCS_NPM_API_CLIENT_FETCH_BUILD_PUSH }}
          env-slug: ${{ env.INFISICAL_ENV_SLUG }}

      - uses: ladesa-ro/esteira-ci-cd/actions/prepare-images-builder@main
        with:
          setup-qemu: "false"
          push-image: "true"

          push-image-registry-url: ${{ env.REGISTRY_URL }}
          push-image-registry-username: ${{ env.REGISTRY_USERNAME }}
          push-image-registry-token: ${{ env.REGISTRY_TOKEN }}

      - name: build and push @ladesa-ro/api-client-fetch.docs
        uses: ladesa-ro/esteira-ci-cd/actions/image-build-push@main
        with:
          image-tag: ${{ github.ref_name }}
          image-name: ${{ env.IMAGE_NAME  }}

          build-image: "true"
          build-target-tag: "docs-npm-api-client-fetch-runtime"

          push-image: "true"
          push-image-registry-url: ${{ env.REGISTRY_URL }}

  cd-cluster:
    name: deploy to Cluster

    runs-on: deploy
    needs: [ci-image]

    environment:
      name: docs-npm-client-fetch
      url: ${{ vars.DEPLOY_URL }}

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: determine Infisical env-slug
        run: echo "INFISICAL_ENV_SLUG=prod" >> "$GITHUB_ENV"

      - uses: Infisical/secrets-action@v1.0.12
        with:
          domain: ${{ secrets.INFISICAL_DOMAIN }}
          client-id: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_MACHINE_IDENTITY_CLIENT_SECRET }}

          project-slug: ${{ secrets.INFISICAL_DOCS_NPM_API_CLIENT_FETCH_PROJECT_SLUG }}

          env-slug: ${{ env.INFISICAL_ENV_SLUG }}
          secret-path: ${{ secrets.INFISICAL_SECRET_PATH_DOCS_NPM_API_CLIENT_FETCH_DEPLOY }}

      - uses: ladesa-ro/esteira-ci-cd/actions/deploy-k8s-stakater-application@main
        with:
          helm-values: ${{ env.DEPLOY_HELM_VALUES }}
          deployment: ${{ env.K8S_DEPLOYMENT }}
          namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.K8S_DEPLOYMENT }}
          helm-release-extra-options: ${{ env.DEPLOY_HELM_EXTRA_OPTIONS }}
