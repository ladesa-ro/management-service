name: Build, Push and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - next

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  # USADOS
  ENABLE_BUILD_IMAGE: ${{ vars.ENABLE_BUILD_IMAGE }}
  ENABLE_PUSH_IMAGE: ${{ vars.ENABLE_PUSH_IMAGE }}

  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

  IMAGE_TAG: ${{ github.ref_name }}
  IMAGE_NAME_SERVICE: ${{ vars.IMAGE_NAME_SERVICE }}
  IMAGE_NAME_DOCS_NPM_API_CLIENT_FETCH: ${{ vars.IMAGE_NAME_DOCS_NPM_API_CLIENT_FETCH }}

  # NAO USADOS
  # ENABLE_TRIGGER_DEPLOY: ${{ vars.ENABLE_TRIGGER_DEPLOY }}

  # DEPLOY_DISPATCH_TOKEN: ${{ secrets.DEPLOY_DISPATCH_TOKEN }}
  # DEPLOY_OWNER: ${{ vars.DEPLOY_OWNER }}
  # DEPLOY_REPOSITORY: ${{ vars.DEPLOY_REPOSITORY }}
  # DEPLOY_WORKFLOW: ${{ vars.DEPLOY_WORKFLOW }}
  # DEPLOY_BRANCH: ${{ vars.DEPLOY_BRANCH }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login into Registry
        if: ${{ env.ENABLE_PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Build and push @ladesa-ro/api.service
        if: ${{ env.ENABLE_BUILD_IMAGE == 'true' }}
        uses: docker/build-push-action@v6
        with:
          # loas is an alias for outputs: type=docker
          # please refer to <https://github.com/concourse/oci-build-task/issues/85>
          # load: true
          outputs: type=cacheonly
          provenance: true
          # platforms: amd64,linux/arm64,linux/arm/v7
          platforms: amd64
          push: ${{ env.ENABLE_PUSH_IMAGE == 'true' }}
          target: api-service
          tags: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME_SERVICE }}:${{ env.IMAGE_TAG }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Build and push @ladesa-ro/api-client-fetch-docs
        if: ${{ env.ENABLE_BUILD_IMAGE == 'true' }}
        uses: docker/build-push-action@v6
        with:
          # DISABLED LOAD, THAT IS AN ALIAS FOR type=docker
          # load: true
          outputs: type=cacheonly
          provenance: true
          # platforms: amd64,linux/arm64,linux/arm/v7
          platforms: amd64
          push: ${{ env.ENABLE_PUSH_IMAGE == 'true' }}
          target: npm-api-client-fetch-docs
          tags: ${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME_DOCS_NPM_API_CLIENT_FETCH }}:${{ env.IMAGE_TAG }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
