{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Olá, Mundo!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "enum": ["@ladesa-ro/api.service"],
                      "description": "O nome desta aplicação."
                    },
                    "status": {
                      "type": "string",
                      "enum": ["up"],
                      "description": "Status desta aplicação."
                    },
                    "adoniranBarbosa": {
                      "type": "string",
                      "enum": ["chico buarque"],
                      "description": "jorge ben jor"
                    },
                    "prefix": {
                      "description": "Prefixo do serviço API.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "version": {
                      "description": "Versão do serviço API.",
                      "oneOf": [
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "buildTime": {
                      "description": "Horário do build da aplicação.",
                      "oneOf": [
                        {
                          "type": "string",
                          "format": "date-time"
                        }
                      ]
                    },
                    "gitCommitHash": {
                      "description": "Hash atrelado ao commit git no horário do build da aplicação.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": ["service", "status", "version"]
                }
              }
            }
          }
        },
        "tags": ["base"]
      }
    },
    "/arquivos/{id}": {
      "get": {
        "description": "Obtêm o conteúdo de um Arquivo.",
        "operationId": "ArquivoGetFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acesso.recurso.id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acesso.recurso.nome",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nomeRecurso",
            "required": true,
            "in": "query",
            "description": "Acesso via recurso: nome.",
            "kind": "schema",
            "schema": {
              "type": "string",
              "description": "Acesso via recurso: nome."
            }
          },
          {
            "name": "idRecurso",
            "required": true,
            "in": "query",
            "description": "Acesso via recurso: id.",
            "kind": "schema",
            "schema": {
              "type": "string",
              "description": "Acesso via recurso: id."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário do Arquivo.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "nullable": false,
                  "description": "Binário do Arquivo.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["application/octet-stream"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["arquivos"]
      }
    },
    "/base/estados": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EstadoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a estados.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["estados"]
      }
    },
    "/base/estados/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EstadoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (numérico).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/numeric_id.json",
              "type": "integer",
              "minimum": 1,
              "description": "Identificador do registro (numérico)."
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um estado.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstadoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["estados"]
      }
    },
    "/base/cidades": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CidadeList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.estado.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a cidades.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CidadeListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cidades"]
      }
    },
    "/base/cidades/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CidadeFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (numérico).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/numeric_id.json",
              "type": "integer",
              "minimum": 1,
              "description": "Identificador do registro (numérico)."
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma cidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cidades"]
      }
    },
    "/autenticacao/quem-sou-eu": {
      "get": {
        "description": "Obtêm informações sobre o estado de autenticação do ator.",
        "operationId": "AuthWhoAmI",
        "parameters": [],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Informações sobre o ator..",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthWhoAmIInputView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["autenticacao"]
      }
    },
    "/autenticacao/login": {
      "post": {
        "description": "Operação de login.",
        "operationId": "AuthLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para autenticação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginInputView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Credenciais de sessão.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionCredentialsView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["autenticacao"]
      }
    },
    "/autenticacao/login/refresh": {
      "post": {
        "description": "Obtêm as credenciais de sessão por meio do envio do token de refresh.",
        "operationId": "AuthRefresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para refresh de autenticação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshInputView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Credenciais de sessão.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionCredentialsView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["autenticacao"]
      }
    },
    "/autenticacao/definir-senha": {
      "post": {
        "description": "Operação para definir a senha inicial.",
        "operationId": "AuthSetInitialPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para definir a senha inicial.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSetInitialPasswordInputView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["autenticacao"]
      }
    },
    "/autenticacao/redefinir-senha": {
      "post": {
        "description": "Operação de login.",
        "operationId": "AuthRecoverPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para autenticação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRecoverPasswordInputView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["autenticacao"]
      }
    },
    "/usuarios": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "UsuarioList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a usuários.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "UsuarioCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um usuário.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      }
    },
    "/usuarios/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "UsuarioFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "UsuarioUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um Usuário.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "UsuarioDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      }
    },
    "/usuarios/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "UsuarioGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "UsuarioSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      }
    },
    "/usuarios/{id}/imagem/perfil": {
      "get": {
        "description": "Obtêm a imagem de perfil.",
        "operationId": "UsuarioGetImagemPerfil",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      },
      "put": {
        "description": "Define a imagem de perfil.",
        "operationId": "UsuarioSetImagemPerfil",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Usuario"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["usuarios"]
      }
    },
    "/vinculos": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "PerfilList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.cargo",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ativo",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.usuario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Vínculos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerfilListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["perfis"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "PerfilUpdateOneById",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a alteração de vínculo de um Usuário a um Campus.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerfilInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Vínculos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerfilListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["perfis"]
      }
    },
    "/campi": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CampusList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.endereco.cidade.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.endereco.cidade.estado.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a campi.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["campi"]
      },
      "post": {
        "description": "Operação de criação de um campus.",
        "operationId": "CampusCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um campus.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampusInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["campi"]
      }
    },
    "/campi/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CampusFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Campus"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["campi"]
      },
      "patch": {
        "description": "Operação de atualização de um campus.",
        "operationId": "CampusUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Campus"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um campus.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampusInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampusFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["campi"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "CampusDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Campus"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["campi"]
      }
    },
    "/blocos": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "BlocoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a blocos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "BlocoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um bloco.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlocoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um bloco.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      }
    },
    "/blocos/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "BlocoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Bloco"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um bloco.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "BlocoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Bloco"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um bloco.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlocoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um bloco.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "BlocoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Bloco"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      }
    },
    "/blocos/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "BlocoGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Bloco"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "BlocoSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Bloco"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["blocos"]
      }
    },
    "/ambientes": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "AmbienteList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.bloco.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.bloco.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a ambientes.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "AmbienteCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um ambiente.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmbienteInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      }
    },
    "/ambientes/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "AmbienteFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Ambiente"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "AmbienteUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Ambiente"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um ambiente.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmbienteInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmbienteFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "AmbienteDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Ambiente"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      }
    },
    "/ambientes/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "AmbienteGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Ambiente"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "AmbienteSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Ambiente"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ambientes"]
      }
    },
    "/reservas": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ReservaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.dataInicio",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.dataTermino",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "intervaloDeTempo.periodoInicio",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "intervaloDeTempo.periodoFim",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Reservas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["reservas"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "ReservaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Reserva.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Reserva.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["reservas"]
      }
    },
    "/reservas/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ReservaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Reserva"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Reserva.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["reservas"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "ReservaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Reserva"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Reserva.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Reserva.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["reservas"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "ReservaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Reserva"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["reservas"]
      }
    },
    "/niveis-formacoes": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "NivelFormacaoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca aos níveis de formações.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NivelFormacaoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["niveis-formacoes"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "NivelFormacaoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um nível de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NivelFormacaoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um nível de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["niveis-formacoes"]
      }
    },
    "/niveis-formacoes/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "NivelFormacaoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "NivelFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um nível de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["niveis-formacoes"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "NivelFormacaoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "NivelFormacao"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um nível de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NivelFormacaoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um nível de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["niveis-formacoes"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "NivelFormacaoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "NivelFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["niveis-formacoes"]
      }
    },
    "/modalidades": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ModalidadeList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Modalidades.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["modalidades"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "ModalidadeCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma modalidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModalidadeInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma modalidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["modalidades"]
      }
    },
    "/modalidades/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ModalidadeFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Modalidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma modalidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["modalidades"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "ModalidadeUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Modalidade"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma modalidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModalidadeInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma modalidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModalidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["modalidades"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "ModalidadeDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Modalidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["modalidades"]
      }
    },
    "/ofertas-formacoes": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a OfertaFormacaos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaFormacaoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes"]
      }
    },
    "/ofertas-formacoes/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacao"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaFormacaoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes"]
      }
    },
    "/ofertas-formacoes-niveis-formacoes": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoNivelFormacaoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a OfertaFormacaoNivelFormacaos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes-niveis-formacoes"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoNivelFormacaoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes-niveis-formacoes"]
      }
    },
    "/ofertas-formacoes-niveis-formacoes/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoNivelFormacaoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacaoNivelFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes-niveis-formacoes"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoNivelFormacaoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacaoNivelFormacao"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes-niveis-formacoes"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "OfertaFormacaoNivelFormacaoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "OfertaFormacaoNivelFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["ofertas-formacoes-niveis-formacoes"]
      }
    },
    "/cursos": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CursoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ofertaFormacao.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Cursos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "CursoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um Curso.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Curso.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      }
    },
    "/cursos/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CursoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Curso"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Curso.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "CursoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Curso"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um Curso.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Curso.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "CursoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Curso"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      }
    },
    "/cursos/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CursoGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Curso"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "CursoSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Curso"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["cursos"]
      }
    },
    "/disciplinas": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diarios.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Disciplinas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Disciplina.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disciplina.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      }
    },
    "/disciplinas/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disciplina"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disciplina.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disciplina"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Disciplina.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisciplinaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disciplina.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisciplinaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disciplina"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      }
    },
    "/disciplinas/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disciplina"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "DisciplinaSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disciplina"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disciplinas"]
      }
    },
    "/calendarios-letivos": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CalendarioLetivoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ofertaFormacao.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a CalendarioLetivos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["calendarios-letivos"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "CalendarioLetivoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um calendário letivo.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioLetivoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["calendarios-letivos"]
      }
    },
    "/calendarios-letivos/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "CalendarioLetivoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "CalendarioLetivo"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["calendarios-letivos"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "CalendarioLetivoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "CalendarioLetivo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um calendário letivo.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarioLetivoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["calendarios-letivos"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "CalendarioLetivoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "CalendarioLetivo"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["calendarios-letivos"]
      }
    },
    "/grades-horarios-ofertas-formacoes": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a GradeHorarioOfertaFormacaos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes"]
      }
    },
    "/grades-horarios-ofertas-formacoes/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacao"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacao"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes"]
      }
    },
    "/grades-horarios-ofertas-formacoes-intervalos-de-tempo": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoIntervaloDeTempoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a GradeHorarioOfertaFormacaoIntervaloDeTempos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes-intervalos-de-tempo"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoIntervaloDeTempoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes-intervalos-de-tempo"]
      }
    },
    "/grades-horarios-ofertas-formacoes-intervalos-de-tempo/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacaoIntervaloDeTempo"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes-intervalos-de-tempo"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacaoIntervaloDeTempo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma oferta de formação.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes-intervalos-de-tempo"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacaoIntervaloDeTempo"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["grades-horarios-ofertas-formacoes-intervalos-de-tempo"]
      }
    },
    "/eventos": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EventoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Eventos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["eventos"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "EventoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um Evento.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Evento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["eventos"]
      }
    },
    "/eventos/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EventoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Evento"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Evento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["eventos"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "EventoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Evento"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um Evento.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um Evento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["eventos"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "EventoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Evento"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["eventos"]
      }
    },
    "/dias-calendario": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiaCalendarioList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a DiaCalendarios.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["dias-calendarios"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DiaCalendarioCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um DiaCalendario.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaCalendarioInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiaCalendario.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["dias-calendarios"]
      }
    },
    "/dias-calendario/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiaCalendarioFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiaCalendario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiaCalendario.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["dias-calendarios"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DiaCalendarioUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiaCalendario"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um DiaCalendario.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiaCalendarioInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiaCalendario.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiaCalendarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["dias-calendarios"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DiaCalendarioDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiaCalendario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["dias-calendarios"]
      }
    },
    "/etapas": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EtapaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Etapas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["etapas"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "EtapaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Etapa.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Etapa.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["etapas"]
      }
    },
    "/etapas/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "EtapaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Etapa"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Etapa.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["etapas"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "EtapaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Etapa"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Etapa.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EtapaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Etapa.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EtapaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["etapas"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "EtapaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Etapa"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["etapas"]
      }
    },
    "/turmas": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "TurmaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.nome",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.codigo",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.capacidade",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadraoAula.tipo",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.nome",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.nomeAbreviado",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.campus.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.curso.modalidade.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Turmas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "TurmaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Turma.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      }
    },
    "/turmas/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "TurmaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Turma"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "TurmaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Turma"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Turma.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "TurmaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Turma"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      }
    },
    "/turmas/{id}/imagem/capa": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "TurmaGetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Turma"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Binário.",
            "content": {
              "image/jpeg": {
                "schema": {
                  "nullable": false,
                  "description": "Binário.",
                  "type": "string",
                  "format": "binary",
                  "mimeTypes": ["image/jpeg"]
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      },
      "put": {
        "description": "Sem descrição.",
        "operationId": "TurmaSetImagemCapa",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Turma"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file"],
                "properties": {
                  "file": {
                    "format": "binary",
                    "metadata": {
                      "nullable": false,
                      "description": "Binário da imagem."
                    },
                    "representation": {
                      "kind": "schema",
                      "schema": {
                        "type": "string",
                        "description": "Binário da imagem.",
                        "mimeTypes": ["image/jpeg", "image/png", "image/jpeg", "image/webp", "binary/octet-stream"],
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultado da operação.",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Resultado da operação."
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas"]
      }
    },
    "/diarios": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.turma.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.disciplina.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambientePadrao.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.calendarioLetivo.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Diarios.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DiarioCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um diário.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios"]
      }
    },
    "/diarios/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Diario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DiarioUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Diario"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um diário.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DiarioDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Diario"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios"]
      }
    },
    "/diarios-professores": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioProfessorList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.perfil.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a DiarioProfessor.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-professores"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DiarioProfessorCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um DiarioProfessor.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioProfessorInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioProfessor.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-professores"]
      }
    },
    "/diarios-professores/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioProfessorFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioProfessor"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioProfessor.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-professores"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DiarioProfessorUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioProfessor"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um DiarioProfessor.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioProfessorInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioProfessor.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioProfessorFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-professores"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DiarioProfessorDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioProfessor"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-professores"]
      }
    },
    "/aulas": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "AulaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.ambiente.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Aulas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["aulas"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "AulaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Aula.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AulaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Aula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["aulas"]
      }
    },
    "/aulas/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "AulaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Aula"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Aula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["aulas"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "AulaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Aula"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Aula.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AulaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Aula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["aulas"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "AulaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Aula"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["aulas"]
      }
    },
    "/disponibilidades": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DisponibilidadeList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a Disponibilidades.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisponibilidadeListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disponibilidades"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DisponibilidadeCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma Disponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisponibilidadeInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disponibilidades"]
      }
    },
    "/disponibilidades/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DisponibilidadeFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disponibilidades"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DisponibilidadeUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disponibilidade"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma Disponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisponibilidadeInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disponibilidades"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DisponibilidadeDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "Disponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["disponibilidades"]
      }
    },
    "/diarios-preferencia-agrupamento": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioPreferenciaAgrupamentoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.diario.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca de DiarioPreferenciaAgrupamentos.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-preferencia-agrupamento"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "DiarioPreferenciaAgrupamentoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um DiarioPreferenciaAgrupamento.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioPreferenciaAgrupamento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-preferencia-agrupamento"]
      }
    },
    "/diarios-preferencia-agrupamento/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "DiarioPreferenciaAgrupamentoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioPreferenciaAgrupamento"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioPreferenciaAgrupamento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-preferencia-agrupamento"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "DiarioPreferenciaAgrupamentoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioPreferenciaAgrupamento"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um DiarioPreferenciaAgrupamento.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioPreferenciaAgrupamento.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-preferencia-agrupamento"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "DiarioPreferenciaAgrupamentoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "DiarioPreferenciaAgrupamento"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["diarios-preferencia-agrupamento"]
      }
    },
    "/turmas-disponibilidades": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "TurmaDisponibilidadeList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.turma.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a TurmaDisponibilidades.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas-disponibilidades"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "TurmaDisponibilidadeCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma TurmaDisponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma TurmaDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas-disponibilidades"]
      }
    },
    "/turmas-disponibilidades/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "TurmaDisponibilidadeFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "TurmaDisponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma TurmaDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas-disponibilidades"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "TurmaDisponibilidadeUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "TurmaDisponibilidade"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma TurmaDisponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TurmaDisponibilidadeInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma TurmaDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas-disponibilidades"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "TurmaDisponibilidadeDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "TurmaDisponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["turmas-disponibilidades"]
      }
    },
    "/professores-disponibilidades": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ProfessorDisponibilidadeList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          },
          {
            "name": "filter.professor.id",
            "required": false,
            "in": "query",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca a ProfessorDisponibilidades.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorDisponibilidadeListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["professores-disponibilidades"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "ProfessorDisponibilidadeCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de uma ProfessorDisponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessorDisponibilidadeInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma ProfessorDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["professores-disponibilidades"]
      }
    },
    "/professores-disponibilidades/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "ProfessorDisponibilidadeFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "ProfessorDisponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma ProfessorDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["professores-disponibilidades"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "ProfessorDisponibilidadeUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "ProfessorDisponibilidade"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de uma ProfessorDisponibilidade.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessorDisponibilidadeInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de uma ProfessorDisponibilidade.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorDisponibilidadeFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["professores-disponibilidades"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "ProfessorDisponibilidadeDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "ProfessorDisponibilidade"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["professores-disponibilidades"]
      }
    },
    "/horarios-gerados": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca de HorariosGerados.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um HorarioGerado.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HorarioGeradoInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGerado.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados"]
      }
    },
    "/horarios-gerados/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGerado"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGerado.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGerado"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um HorarioGerado.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HorarioGeradoInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGerado.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGerado"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados"]
      }
    },
    "/horarios-gerados-aula": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoAulaList",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Página de consulta.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Página de consulta.",
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Limite da quantidade de resultados por página.",
            "kind": "schema",
            "schema": {
              "minimum": 1,
              "description": "Limite da quantidade de resultados por página.",
              "type": "integer"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Busca textual.",
            "kind": "schema",
            "schema": {
              "description": "Busca textual.",
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Ordenação.",
            "kind": "schema",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "nullable": false,
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Resultados da busca de HorarioGeradoAulas.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoAulaListResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados-aula"]
      },
      "post": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoAulaCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a criação de um HorarioGeradoAula.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HorarioGeradoAulaInputCreateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGeradoAula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoAulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados-aula"]
      }
    },
    "/horarios-gerados-aula/{id}": {
      "get": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoAulaFindOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGeradoAula"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGeradoAula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoAulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados-aula"]
      },
      "patch": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoAulaUpdateOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGeradoAula"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados de entrada para a atualização de um HorarioGeradoAula.",
          "kind": "type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HorarioGeradoAulaInputUpdateView"
              }
            }
          }
        },
        "responses": {
          "200": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGeradoAula.",
            "kind": "type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HorarioGeradoAulaFindOneResultView"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados-aula"]
      },
      "delete": {
        "description": "Sem descrição.",
        "operationId": "HorarioGeradoAulaDeleteOneById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador do registro (uuid).",
            "kind": "schema",
            "schema": {
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/uuid.json",
              "type": "string",
              "format": "uuid",
              "description": "Identificador do registro (uuid).",
              "x-unispec-constraint-entity-exists": "HorarioGeradoAula"
            }
          }
        ],
        "responses": {
          "200": {
            "nullable": false,
            "description": "",
            "kind": "schema",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "O solicitante não tem permissão para executar esta ação."
          },
          "404": {
            "description": "Registro não encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "",
        "tags": ["horarios-gerados-aula"]
      }
    }
  },
  "info": {
    "title": "Ladesa - API",
    "description": "API para a consulta e manipulação de dados e procedimentos relacionados ao Sistema de Gestão Acadêmico.",
    "version": "0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "base",
      "description": "Base"
    },
    {
      "name": "arquivos",
      "description": "Base / Armazenamento / Arquivos"
    },
    {
      "name": "estados",
      "description": "Base / Lugares / Estados"
    },
    {
      "name": "cidades",
      "description": "Base / Lugares / Estados / Cidades"
    },
    {
      "name": "autenticacao",
      "description": ""
    },
    {
      "name": "usuarios",
      "description": "Autenticação / Usuários"
    },
    {
      "name": "campi",
      "description": "Ambientes / Campi"
    },
    {
      "name": "blocos",
      "description": "Ambientes / Campi / Blocos"
    },
    {
      "name": "ambientes",
      "description": "Ambientes / Campi / Blocos / Ambiente"
    },
    {
      "name": "reservas",
      "description": "Ambientes / Campi / Blocos / Ambiente / Reservas"
    },
    {
      "name": "perfis",
      "description": "Autorização / Usuários / Perfis"
    },
    {
      "name": "niveis-formacoes",
      "description": "Ensino Institucional / Níveis de Formações"
    },
    {
      "name": "modalidades",
      "description": "Ensino Institucional / Modalidades"
    },
    {
      "name": "ofertas-formacoes",
      "description": "Ensino Institucional / Ofertas de Formações"
    },
    {
      "name": "ofertas-formacoes-niveis-formacoes",
      "description": "Ensino Institucional / Ofertas de Formações / Níveis de Formação"
    },
    {
      "name": "cursos",
      "description": "Ensino Institucional / Cursos"
    },
    {
      "name": "disciplinas",
      "description": "Ensino Institucional / Disciplinas"
    },
    {
      "name": "grades-horarios-ofertas-formacoes",
      "description": "Calendário / Grades de Horário para Ofertas de Formações"
    },
    {
      "name": "grades-horarios-ofertas-formacoes-intervalos-de-tempo",
      "description": "Calendário / Grades de Horário para Ofertas de Formações / Intervalos de Tempo"
    },
    {
      "name": "calendarios-letivos",
      "description": "Calendário / Calendarios Letivos"
    },
    {
      "name": "dias-calendarios",
      "description": "Calendário / Calendarios Letivos / Dias"
    },
    {
      "name": "etapas",
      "description": "Calendário / Calendarios Letivos / Etapas"
    },
    {
      "name": "eventos",
      "description": "Calendário / Calendarios Letivos / Eventos"
    },
    {
      "name": "turmas",
      "description": "Ensino Discente / Turmas"
    },
    {
      "name": "diarios",
      "description": "Ensino Discente / Diarios"
    },
    {
      "name": "diarios-professores",
      "description": "Ensino Discente / Professores em Diários"
    },
    {
      "name": "aulas",
      "description": "Ensino Discente / Aulas"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "PaginatedResultMetaView": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade de itens por página."
          },
          "totalItems": {
            "type": "integer",
            "nullable": false,
            "description": "Total de itens."
          },
          "currentPage": {
            "type": "integer",
            "nullable": false,
            "description": "Página atual."
          },
          "totalPages": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade total de páginas."
          },
          "search": {
            "type": "string",
            "nullable": false,
            "description": "Termo textual da busca."
          },
          "sortBy": {
            "type": "array",
            "nullable": false,
            "description": "Ordenação.",
            "items": {
              "nullable": false,
              "description": "Configuração de ordenação de uma propriedade.",
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/PaginationSortByView.json",
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "pattern": "^[\\D\\.]+$",
                  "description": "Propriedade ordenada."
                },
                "mode": {
                  "type": "string",
                  "pattern": "^(ASC|DESC)$",
                  "description": "Modo de ordenação."
                }
              },
              "required": ["property", "mode"],
              "deprecated": true,
              "x-unispec-kind": "entity",
              "x-unispec-entity-id": "PaginatedSortByView",
              "additionalProperties": false
            }
          },
          "filter": {
            "type": "array",
            "nullable": false,
            "description": "Filtros.",
            "items": {
              "nullable": false,
              "description": "Configuração de filtro por restrições de uma propriedade.",
              "$schema": "https://json-schema.org/draft/2020-12/schema",
              "$id": "ladesa://schemas/v3/generics/PaginationFilterView.json",
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "description": "Propriedade filtrada."
                },
                "restrictions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Restrições de filtragem."
                }
              },
              "required": ["property", "restrictions"],
              "deprecated": true,
              "x-unispec-kind": "entity",
              "x-unispec-entity-id": "PaginatedFilterView",
              "additionalProperties": false
            }
          }
        },
        "required": ["itemsPerPage", "totalItems", "currentPage", "totalPages", "search", "sortBy", "filter"]
      },
      "EstadoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "Identificador do registro (numérico).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/numeric_id.json",
            "minimum": 1
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome oficial do estado."
          },
          "sigla": {
            "type": "string",
            "nullable": false,
            "description": "Sigla do estado.",
            "x-unispec-constraint-estado-sigla": true
          }
        },
        "required": ["id", "nome", "sigla"]
      },
      "PaginatedResultLinksView": {
        "type": "object",
        "properties": {
          "first": {
            "type": "string",
            "nullable": true
          },
          "previous": {
            "type": "string",
            "nullable": true
          },
          "current": {
            "type": "string",
            "nullable": true
          },
          "next": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["first", "previous", "current", "next", "last"]
      },
      "EstadoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um estado.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstadoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CidadeFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "Identificador do registro (numérico).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/numeric_id.json",
            "minimum": 1
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome oficial da cidade."
          },
          "estado": {
            "nullable": false,
            "description": "Visão FindOne de um estado.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/EstadoFindOneResultView"
              }
            ]
          }
        },
        "required": ["id", "nome", "estado"]
      },
      "CidadeListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma cidade.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CidadeFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "ArquivoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Nome do arquivo."
          },
          "mimeType": {
            "type": "string",
            "nullable": true,
            "description": "Formato do arquivo."
          },
          "sizeBytes": {
            "type": "integer",
            "nullable": true,
            "description": "Tamanho do arquivo (em bytes)."
          },
          "storageType": {
            "type": "string",
            "nullable": false,
            "description": "Estratégia de armazenamento do conteúdo."
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "name", "mimeType", "sizeBytes", "storageType", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "ImagemArquivoFindOneFromImagemResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "largura": {
            "type": "integer",
            "nullable": false,
            "description": "Largura da imagem."
          },
          "altura": {
            "type": "integer",
            "nullable": false,
            "description": "Altura da imagem."
          },
          "formato": {
            "type": "string",
            "nullable": false,
            "description": "Formato da imagem."
          },
          "mimeType": {
            "type": "string",
            "nullable": false,
            "description": "Mime-type da imagem."
          },
          "arquivo": {
            "nullable": false,
            "description": "Dados de saída para encontrar um arquivo por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ArquivoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "largura", "altura", "formato", "mimeType", "arquivo", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "ImagemFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição da imagem."
          },
          "versoes": {
            "nullable": false,
            "description": "Visão FindOneFromImagem de uma versão de imagem.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImagemArquivoFindOneFromImagemResultView"
            }
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "descricao", "versoes", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "UsuarioFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do usuário.",
            "minLength": 1
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": true,
            "description": "Matrícula SIAPE do usuário.",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "E-mail do usuário.",
            "format": "email"
          },
          "isSuperUser": {
            "type": "boolean",
            "nullable": false,
            "description": "Diz que o usuário tem poderes de administrador."
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "imagemPerfil": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "matriculaSiape", "email", "isSuperUser", "imagemCapa", "imagemPerfil", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "EnderecoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "cep": {
            "type": "string",
            "nullable": false,
            "description": "Código postal (CEP).",
            "x-unispec-constraint-cep": true
          },
          "logradouro": {
            "type": "string",
            "nullable": false,
            "description": "Logradouro."
          },
          "numero": {
            "type": "integer",
            "nullable": false,
            "description": "Número.",
            "minimum": 0,
            "maximum": 99999
          },
          "bairro": {
            "type": "string",
            "nullable": false,
            "description": "Bairro."
          },
          "complemento": {
            "type": "string",
            "nullable": true,
            "description": "Complemento."
          },
          "pontoReferencia": {
            "type": "string",
            "nullable": true,
            "description": "Ponto de referência."
          },
          "cidade": {
            "nullable": false,
            "description": "Visão FindOne de uma cidade.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CidadeFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "cep", "logradouro", "numero", "bairro", "complemento", "pontoReferencia", "cidade", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "CampusFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do campus.",
            "minLength": 1
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do campus.",
            "minLength": 1
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do campus.",
            "minLength": 1
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do campus.",
            "minLength": 1
          },
          "endereco": {
            "nullable": false,
            "description": "Visão FindOne de um endereço.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nomeFantasia", "razaoSocial", "apelido", "cnpj", "endereco", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "PerfilFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "ativo": {
            "type": "boolean",
            "nullable": false,
            "description": "Indica se o vínculo está ativo."
          },
          "cargo": {
            "type": "string",
            "nullable": false,
            "description": "Cargo do usuário no vínculo."
          },
          "campus": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultView"
              }
            ]
          },
          "usuario": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "ativo", "cargo", "campus", "usuario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "AuthWhoAmIInputView": {
        "type": "object",
        "properties": {
          "usuario": {
            "nullable": true,
            "description": "Usuário autenticado.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultView"
              }
            ]
          },
          "perfisAtivos": {
            "nullable": false,
            "description": "Visão FindOne de um Vínculo.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerfilFindOneResultView"
            }
          }
        },
        "required": ["usuario", "perfisAtivos"]
      },
      "AuthLoginInputView": {
        "type": "object",
        "properties": {
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula SIAPE."
          },
          "senha": {
            "type": "string",
            "nullable": false,
            "description": "Senha do usuário."
          }
        },
        "required": ["matriculaSiape", "senha"]
      },
      "AuthSessionCredentialsView": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de acesso."
          },
          "token_type": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do token."
          },
          "id_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de identificação."
          },
          "refresh_token": {
            "type": "string",
            "nullable": true,
            "description": "Token de refresh."
          },
          "expires_in": {
            "type": "integer",
            "nullable": true,
            "description": "Tempo de expiração do token."
          },
          "expires_at": {
            "type": "integer",
            "nullable": true,
            "description": "Tempo de expiração do token."
          },
          "session_state": {
            "type": "string",
            "nullable": true,
            "description": "Estado da sessão."
          },
          "scope": {
            "type": "string",
            "nullable": true,
            "description": "Escopo da autenticação."
          }
        },
        "required": ["access_token", "token_type", "id_token", "refresh_token", "expires_in", "expires_at", "session_state", "scope"]
      },
      "AuthRefreshInputView": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": false,
            "description": "Token de refresh."
          }
        },
        "required": ["refreshToken"]
      },
      "AuthSetInitialPasswordInputView": {
        "type": "object",
        "properties": {
          "matriculaSiape": {
            "type": "string",
            "nullable": false,
            "description": "Matrícula SIAPE."
          },
          "senha": {
            "type": "string",
            "nullable": false,
            "description": "Nova senha."
          }
        },
        "required": ["matriculaSiape", "senha"]
      },
      "AuthRecoverPasswordInputView": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false,
            "description": "E-mail."
          }
        },
        "required": ["email"]
      },
      "UsuarioListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UsuarioFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "UsuarioInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do usuário.",
            "minLength": 1
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": true,
            "description": "Matrícula SIAPE do usuário.",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "E-mail do usuário.",
            "format": "email"
          }
        },
        "required": ["nome", "matriculaSiape", "email"]
      },
      "UsuarioInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do usuário.",
            "minLength": 1
          },
          "matriculaSiape": {
            "type": "string",
            "nullable": true,
            "description": "Matrícula SIAPE do usuário.",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "nullable": true,
            "description": "E-mail do usuário.",
            "format": "email"
          }
        }
      },
      "PerfilListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um Vínculo.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerfilFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CampusFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Campus"
          }
        },
        "required": ["id"]
      },
      "UsuarioFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Usuario"
          }
        },
        "required": ["id"]
      },
      "PerfilInputUpdateView": {
        "type": "object",
        "properties": {
          "cargos": {
            "type": "array",
            "nullable": false,
            "description": "Cargos do usuário no vínculo.",
            "items": {
              "nullable": false,
              "type": "string"
            }
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "usuario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Usuário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputView"
              }
            ]
          }
        },
        "required": ["cargos", "campus", "usuario"]
      },
      "CampusListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampusFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CidadeFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": false,
            "description": "Identificador do registro (numérico).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/numeric_id.json",
            "minimum": 1
          }
        },
        "required": ["id"]
      },
      "EnderecoInputView": {
        "type": "object",
        "properties": {
          "cep": {
            "type": "string",
            "nullable": false,
            "description": "Código postal (CEP).",
            "x-unispec-constraint-cep": true
          },
          "logradouro": {
            "type": "string",
            "nullable": false,
            "description": "Logradouro."
          },
          "numero": {
            "type": "integer",
            "nullable": false,
            "description": "Número.",
            "minimum": 0,
            "maximum": 99999
          },
          "bairro": {
            "type": "string",
            "nullable": false,
            "description": "Bairro."
          },
          "complemento": {
            "type": "string",
            "nullable": true,
            "description": "Complemento."
          },
          "pontoReferencia": {
            "type": "string",
            "nullable": true,
            "description": "Ponto de referência."
          },
          "cidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma cidade por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CidadeFindOneInputView"
              }
            ]
          }
        },
        "required": ["cep", "logradouro", "numero", "bairro", "complemento", "pontoReferencia", "cidade"]
      },
      "CampusInputCreateView": {
        "type": "object",
        "properties": {
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do campus.",
            "minLength": 1
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do campus.",
            "minLength": 1
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do campus.",
            "minLength": 1
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do campus.",
            "minLength": 1
          },
          "endereco": {
            "nullable": false,
            "description": "Dados de entrada para um endereco.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoInputView"
              }
            ]
          }
        },
        "required": ["nomeFantasia", "razaoSocial", "apelido", "cnpj", "endereco"]
      },
      "CampusInputUpdateView": {
        "type": "object",
        "properties": {
          "nomeFantasia": {
            "type": "string",
            "nullable": false,
            "description": "Nome fantasia do campus.",
            "minLength": 1
          },
          "razaoSocial": {
            "type": "string",
            "nullable": false,
            "description": "Razão social do campus.",
            "minLength": 1
          },
          "apelido": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do campus.",
            "minLength": 1
          },
          "cnpj": {
            "type": "string",
            "nullable": false,
            "description": "CNPJ do campus.",
            "minLength": 1
          },
          "endereco": {
            "nullable": false,
            "description": "Dados de entrada para um endereco.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/EnderecoInputView"
              }
            ]
          }
        }
      },
      "BlocoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco.",
            "minLength": 1
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultView"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "codigo", "campus", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "BlocoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um bloco.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlocoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "BlocoInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco.",
            "minLength": 1
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "codigo", "campus"]
      },
      "BlocoInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do Bloco.",
            "minLength": 1
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do Bloco.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          }
        }
      },
      "AmbienteFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala.",
            "minLength": 1
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala.",
            "minLength": 1
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Visão FindOne de um bloco.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneResultView"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "descricao", "codigo", "capacidade", "tipo", "bloco", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "AmbienteListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmbienteFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "BlocoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Bloco"
          }
        },
        "required": ["id"]
      },
      "AmbienteInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala.",
            "minLength": 1
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala.",
            "minLength": 1
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um bloco por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "descricao", "codigo", "capacidade", "tipo", "bloco"]
      },
      "AmbienteInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do ambiente/sala.",
            "minLength": 1
          },
          "descricao": {
            "type": "string",
            "nullable": true,
            "description": "Descrição do ambiente/sala."
          },
          "codigo": {
            "type": "string",
            "nullable": false,
            "description": "Código do ambiente/sala.",
            "minLength": 1
          },
          "capacidade": {
            "type": "integer",
            "nullable": true,
            "description": "Capacidade do ambiente/sala."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química."
          },
          "bloco": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um bloco por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/BlocoFindOneInputView"
              }
            ]
          }
        }
      },
      "ReservaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva.",
            "minLength": 1
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva.",
            "minLength": 1
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo da reserva.",
            "minLength": 1
          },
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar."
          },
          "usuario": {
            "nullable": false,
            "description": "Visão FindOne de um Usuário.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneResultView"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "situacao", "motivo", "tipo", "rrule", "usuario", "ambiente", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "ReservaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Reserva.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "AmbienteFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Ambiente"
          }
        },
        "required": ["id"]
      },
      "ReservaInputCreateView": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva.",
            "minLength": 1
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva.",
            "minLength": 1
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo da reserva.",
            "minLength": 1
          },
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar."
          },
          "usuario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Usuário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputView"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        },
        "required": ["situacao", "motivo", "tipo", "rrule", "usuario", "ambiente"]
      },
      "ReservaInputUpdateView": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "string",
            "nullable": false,
            "description": "Situação da reserva.",
            "minLength": 1
          },
          "motivo": {
            "type": "string",
            "nullable": true,
            "description": "Motivo da reserva.",
            "minLength": 1
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo da reserva.",
            "minLength": 1
          },
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar."
          },
          "usuario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Usuário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/UsuarioFindOneInputView"
              }
            ]
          },
          "ambiente": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        }
      },
      "NivelFormacaoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do nível de formação.",
            "minLength": 1
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "slug", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "NivelFormacaoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um nível de formação.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NivelFormacaoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "NivelFormacaoInputCreateView": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do nível de formação.",
            "minLength": 1
          }
        },
        "required": ["slug"]
      },
      "NivelFormacaoInputUpdateView": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido do nível de formação.",
            "minLength": 1
          }
        }
      },
      "ModalidadeFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da modalidade.",
            "minLength": 1
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "slug", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "ModalidadeListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma modalidade.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModalidadeFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "ModalidadeInputCreateView": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da modalidade.",
            "minLength": 1
          }
        },
        "required": ["slug"]
      },
      "ModalidadeInputUpdateView": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da modalidade.",
            "minLength": 1
          }
        }
      },
      "OfertaFormacaoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da oferta de formação.",
            "minLength": 1
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da oferta de formação.",
            "minLength": 1
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade da oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "slug", "modalidade", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "OfertaFormacaoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "ModalidadeFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Modalidade"
          }
        },
        "required": ["id"]
      },
      "OfertaFormacaoInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da oferta de formação.",
            "minLength": 1
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da oferta de formação.",
            "minLength": 1
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade da oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "slug", "modalidade"]
      },
      "OfertaFormacaoInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da oferta de formação.",
            "minLength": 1
          },
          "slug": {
            "type": "string",
            "nullable": false,
            "description": "Apelido da oferta de formação.",
            "minLength": 1
          },
          "modalidade": {
            "nullable": false,
            "description": "Modalidade da oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModalidadeFindOneInputView"
              }
            ]
          }
        }
      },
      "OfertaFormacaoNivelFormacaoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
              }
            ]
          },
          "nivelFormacao": {
            "nullable": false,
            "description": "Visão FindOne de um nível de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/NivelFormacaoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "ofertaFormacao", "nivelFormacao", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "OfertaFormacaoNivelFormacaoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfertaFormacaoNivelFormacaoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "OfertaFormacaoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "OfertaFormacao"
          }
        },
        "required": ["id"]
      },
      "NivelFormacaoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "NivelFormacao"
          }
        },
        "required": ["id"]
      },
      "OfertaFormacaoNivelFormacaoInputCreateView": {
        "type": "object",
        "properties": {
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          },
          "nivelFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um nível de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/NivelFormacaoFindOneInputView"
              }
            ]
          }
        },
        "required": ["ofertaFormacao", "nivelFormacao"]
      },
      "OfertaFormacaoNivelFormacaoInputUpdateView": {
        "type": "object",
        "properties": {
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          },
          "nivelFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um nível de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/NivelFormacaoFindOneInputView"
              }
            ]
          }
        }
      },
      "CursoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "nomeAbreviado", "campus", "ofertaFormacao", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "CursoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um Curso.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CursoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CursoInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "nomeAbreviado", "campus", "ofertaFormacao"]
      },
      "CursoInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do curso.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado do curso.",
            "minLength": 1
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        }
      },
      "DisciplinaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina.",
            "minLength": 1
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina.",
            "minimum": 1,
            "maximum": 65535
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "nomeAbreviado", "cargaHoraria", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DisciplinaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Disciplina.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisciplinaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DisciplinaInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina.",
            "minLength": 1
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina.",
            "minimum": 1,
            "maximum": 65535
          }
        },
        "required": ["nome", "nomeAbreviado", "cargaHoraria"]
      },
      "DisciplinaInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome da disciplina.",
            "minLength": 1
          },
          "nomeAbreviado": {
            "type": "string",
            "nullable": false,
            "description": "Nome abreviado da disciplina.",
            "minLength": 1
          },
          "cargaHoraria": {
            "type": "integer",
            "nullable": false,
            "description": "Carga horária da disciplina.",
            "minimum": 1,
            "maximum": 65535
          }
        }
      },
      "CalendarioLetivoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo.",
            "minimum": 0,
            "maximum": 65535
          },
          "campus": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "ano", "campus", "ofertaFormacao", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "CalendarioLetivoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CalendarioLetivoInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo.",
            "minimum": 0,
            "maximum": 65535
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "ano", "campus", "ofertaFormacao"]
      },
      "CalendarioLetivoInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": false,
            "description": "Nome do calendário letivo."
          },
          "ano": {
            "type": "integer",
            "nullable": false,
            "description": "Ano do calendário letivo.",
            "minimum": 0,
            "maximum": 65535
          },
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        }
      },
      "GradeHorarioOfertaFormacaoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "campus": {
            "nullable": false,
            "description": "Visão FindOne de um campus.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneResultView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "campus", "ofertaFormacao", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "GradeHorarioOfertaFormacaoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "GradeHorarioOfertaFormacaoInputCreateView": {
        "type": "object",
        "properties": {
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        },
        "required": ["campus", "ofertaFormacao"]
      },
      "GradeHorarioOfertaFormacaoInputUpdateView": {
        "type": "object",
        "properties": {
          "campus": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um campus por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CampusFindOneInputView"
              }
            ]
          },
          "ofertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/OfertaFormacaoFindOneInputView"
              }
            ]
          }
        }
      },
      "IntervaloDeTempoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "periodoInicio": {
            "type": "string",
            "nullable": false,
            "description": "Horário que o intervalo de tempo inicia.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/time.json",
            "format": "time"
          },
          "periodoFim": {
            "type": "string",
            "nullable": false,
            "description": "Horário que o intervalo de tempo termina.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/time.json",
            "format": "time"
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "periodoInicio", "periodoFim", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "gradeHorarioOfertaFormacao": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneResultView"
              }
            ]
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Visão FindOne de um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "gradeHorarioOfertaFormacao", "intervaloDeTempo", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma oferta de formação.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "GradeHorarioOfertaFormacaoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "GradeHorarioOfertaFormacao"
          }
        },
        "required": ["id"]
      },
      "IntervaloDeTempoInputView": {
        "type": "object",
        "properties": {
          "periodoInicio": {
            "type": "string",
            "nullable": false,
            "description": "Horário que o intervalo de tempo inicia.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/time.json",
            "format": "time"
          },
          "periodoFim": {
            "type": "string",
            "nullable": false,
            "description": "Horário que o intervalo de tempo termina.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/time.json",
            "format": "time"
          }
        },
        "required": ["periodoInicio", "periodoFim"]
      },
      "GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView": {
        "type": "object",
        "properties": {
          "gradeHorarioOfertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneInputView"
              }
            ]
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          }
        },
        "required": ["gradeHorarioOfertaFormacao", "intervaloDeTempo"]
      },
      "GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView": {
        "type": "object",
        "properties": {
          "gradeHorarioOfertaFormacao": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma oferta de formação por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/GradeHorarioOfertaFormacaoFindOneInputView"
              }
            ]
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          }
        }
      },
      "EventoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "nome": {
            "type": "string",
            "nullable": true,
            "description": "Nome do evento."
          },
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar."
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da Evento."
          },
          "calendario": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "nome", "rrule", "cor", "calendario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "EventoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um Evento.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CalendarioLetivoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "CalendarioLetivo"
          }
        },
        "required": ["id"]
      },
      "EventoInputCreateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "rrule": {
            "type": "string",
            "nullable": false
          },
          "cor": {
            "type": "string",
            "nullable": true
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        },
        "required": ["nome", "rrule", "cor", "calendario"]
      },
      "EventoInputUpdateView": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "rrule": {
            "type": "string",
            "nullable": false
          },
          "cor": {
            "type": "string",
            "nullable": true
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        }
      },
      "DiaCalendarioFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Data.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é letivo."
          },
          "feriado": {
            "type": "boolean",
            "nullable": false,
            "description": "Define que o dia é feriado."
          },
          "calendario": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "data", "diaLetivo", "feriado", "calendario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DiaCalendarioListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um DiaCalendario.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiaCalendarioFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DiaCalendarioInputCreateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "feriado": {
            "type": "boolean",
            "nullable": false
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false
          },
          "calendario": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        },
        "required": ["data", "feriado", "diaLetivo", "calendario"]
      },
      "DiaCalendarioInputUpdateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "feriado": {
            "type": "boolean",
            "nullable": false
          },
          "diaLetivo": {
            "type": "boolean",
            "nullable": false
          },
          "calendario": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        }
      },
      "EtapaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "numero": {
            "type": "integer",
            "nullable": true,
            "description": "Número da etapa.",
            "minimum": 0,
            "maximum": 255
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Data de início.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataTermino": {
            "type": "string",
            "nullable": false,
            "description": "Data de término.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "cor": {
            "type": "string",
            "nullable": true,
            "description": "Cor da etapa."
          },
          "calendario": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "numero", "dataInicio", "dataTermino", "cor", "calendario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "EtapaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Etapa.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtapaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "EtapaInputCreateView": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 255
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataTermino": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "cor": {
            "type": "string",
            "nullable": true
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        },
        "required": ["numero", "dataInicio", "dataTermino", "cor", "calendario"]
      },
      "EtapaInputUpdateView": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "nullable": true,
            "minimum": 0,
            "maximum": 255
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataTermino": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "cor": {
            "type": "string",
            "nullable": true
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        }
      },
      "TurmaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período da Turma.",
            "minLength": 1
          },
          "curso": {
            "nullable": false,
            "description": "Visão FindOne de um Curso.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneResultView"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultView"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "periodo", "curso", "ambientePadraoAula", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "TurmaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurmaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "CursoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Curso"
          }
        },
        "required": ["id"]
      },
      "TurmaInputCreateView": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período da Turma.",
            "minLength": 1
          },
          "curso": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Curso por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneInputView"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        },
        "required": ["periodo", "curso", "ambientePadraoAula"]
      },
      "TurmaInputUpdateView": {
        "type": "object",
        "properties": {
          "periodo": {
            "type": "string",
            "nullable": false,
            "description": "Período da Turma.",
            "minLength": 1
          },
          "curso": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Curso por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CursoFindOneInputView"
              }
            ]
          },
          "ambientePadraoAula": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        }
      },
      "DiarioFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "ativo": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do diário."
          },
          "calendarioLetivo": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneResultView"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Visão FindOne de uma Disciplina.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneResultView"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultView"
              }
            ]
          },
          "imagemCapa": {
            "nullable": true,
            "description": "Visão FindOne de uma imagem.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/ImagemFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "ativo", "calendarioLetivo", "turma", "disciplina", "ambientePadrao", "imagemCapa", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DiarioListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiarioFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "TurmaFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Turma"
          }
        },
        "required": ["id"]
      },
      "DisciplinaFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Disciplina"
          }
        },
        "required": ["id"]
      },
      "DiarioInputCreateView": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "nullable": false
          },
          "calendarioLetivo": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Turma por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputView"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disciplina por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneInputView"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        },
        "required": ["ativo", "calendarioLetivo", "turma", "disciplina", "ambientePadrao"]
      },
      "DiarioInputUpdateView": {
        "type": "object",
        "properties": {
          "ativo": {
            "type": "boolean",
            "nullable": false
          },
          "calendarioLetivo": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Turma por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputView"
              }
            ]
          },
          "disciplina": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disciplina por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisciplinaFindOneInputView"
              }
            ]
          },
          "ambientePadrao": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        }
      },
      "DiarioProfessorFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "situacao": {
            "type": "boolean",
            "nullable": false,
            "description": "Situação do vínculo."
          },
          "perfil": {
            "nullable": false,
            "description": "Visão FindOne de um Vínculo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneResultView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "situacao", "perfil", "diario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DiarioProfessorListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioProfessor.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiarioProfessorFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "PerfilFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Perfil"
          }
        },
        "required": ["id"]
      },
      "DiarioFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Diario"
          }
        },
        "required": ["id"]
      },
      "DiarioProfessorInputCreateView": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "boolean",
            "nullable": false
          },
          "perfil": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Vínculo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          }
        },
        "required": ["situacao", "perfil", "diario"]
      },
      "DiarioProfessorInputUpdateView": {
        "type": "object",
        "properties": {
          "situacao": {
            "type": "boolean",
            "nullable": false
          },
          "perfil": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Vínculo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          }
        }
      },
      "AulaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Data da aula.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "modalidade": {
            "type": "string",
            "nullable": true,
            "description": "Modalidade da aula."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Visão FindOne de um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneResultView"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Visão FindOne de um ambiente.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "data", "modalidade", "intervaloDeTempo", "diario", "ambiente", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "AulaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Aula.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AulaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "AulaInputCreateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "modalidade": {
            "type": "string",
            "nullable": true
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        },
        "required": ["data", "modalidade", "intervaloDeTempo", "diario", "ambiente"]
      },
      "AulaInputUpdateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "modalidade": {
            "type": "string",
            "nullable": true
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          },
          "ambiente": {
            "nullable": true,
            "description": "Dados de entrada para encontrar um ambiente por id.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmbienteFindOneInputView"
              }
            ]
          }
        }
      },
      "DisponibilidadeFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Data de início.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Data de término.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "dataInicio", "dataFim", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DisponibilidadeListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DisponibilidadeInputCreateView": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          }
        },
        "required": ["dataInicio", "dataFim"]
      },
      "DisponibilidadeInputUpdateView": {
        "type": "object",
        "properties": {
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Date ISO 8601.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          }
        }
      },
      "DisponibilidadeDiaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Visão FindOne de um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultView"
              }
            ]
          },
          "disponibilidade": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "rrule", "intervaloDeTempo", "disponibilidade", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DisponibilidadeDiaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um DisponibilidadeDia.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisponibilidadeDiaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DisponibilidadeFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "Disponibilidade"
          }
        },
        "required": ["id"]
      },
      "DisponibilidadeDiaInputCreateView": {
        "type": "object",
        "properties": {
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          }
        },
        "required": ["rrule", "intervaloDeTempo", "disponibilidade"]
      },
      "DisponibilidadeDiaInputUpdateView": {
        "type": "object",
        "properties": {
          "rrule": {
            "type": "string",
            "nullable": false,
            "description": "Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar."
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          }
        }
      },
      "TurmaDisponibilidadeFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "disponibilidade": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Visão FindOne de uma Turma.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "disponibilidade", "turma", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "TurmaDisponibilidadeListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma TurmaDisponibilidade.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TurmaDisponibilidadeFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "TurmaDisponibilidadeInputCreateView": {
        "type": "object",
        "properties": {
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Turma por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputView"
              }
            ]
          }
        },
        "required": ["disponibilidade", "turma"]
      },
      "TurmaDisponibilidadeInputUpdateView": {
        "type": "object",
        "properties": {
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          },
          "turma": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Turma por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurmaFindOneInputView"
              }
            ]
          }
        }
      },
      "ProfessorDisponibilidadeFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "disponibilidade": {
            "nullable": false,
            "description": "Visão FindOne de uma Disponibilidade.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneResultView"
              }
            ]
          },
          "perfil": {
            "nullable": false,
            "description": "Visão FindOne de um Vínculo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "disponibilidade", "perfil", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "ProfessorDisponibilidadeListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de uma ProfessorDisponibilidade.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfessorDisponibilidadeFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "ProfessorDisponibilidadeInputCreateView": {
        "type": "object",
        "properties": {
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          },
          "perfil": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Vínculo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneInputView"
              }
            ]
          }
        },
        "required": ["disponibilidade", "perfil"]
      },
      "ProfessorDisponibilidadeInputUpdateView": {
        "type": "object",
        "properties": {
          "disponibilidade": {
            "nullable": false,
            "description": "Dados de entrada para encontrar uma Disponibilidade por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DisponibilidadeFindOneInputView"
              }
            ]
          },
          "perfil": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um Vínculo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PerfilFindOneInputView"
              }
            ]
          }
        }
      },
      "DiarioPreferenciaAgrupamentoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Início da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana.",
            "minimum": 0,
            "maximum": 255
          },
          "aulasSeguidas": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade de aulas seguidas.",
            "minimum": 0,
            "maximum": 255
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Visão FindOne de um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Visão FindOne de um diário.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "dataInicio", "dataFim", "diaSemanaIso", "aulasSeguidas", "intervaloDeTempo", "diario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "DiarioPreferenciaAgrupamentoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioPreferenciaAgrupamento.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiarioPreferenciaAgrupamentoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DiarioPreferenciaAgrupamentoInputCreateView": {
        "type": "object",
        "properties": {
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana.",
            "minimum": 0,
            "maximum": 255
          },
          "aulasSeguidas": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade de aulas seguidas.",
            "minimum": 0,
            "maximum": 255
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Início da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          }
        },
        "required": ["diaSemanaIso", "aulasSeguidas", "dataInicio", "dataFim", "intervaloDeTempo", "diario"]
      },
      "DiarioPreferenciaAgrupamentoInputUpdateView": {
        "type": "object",
        "properties": {
          "diaSemanaIso": {
            "type": "integer",
            "nullable": false,
            "description": "Dia da semana.",
            "minimum": 0,
            "maximum": 255
          },
          "aulasSeguidas": {
            "type": "integer",
            "nullable": false,
            "description": "Quantidade de aulas seguidas.",
            "minimum": 0,
            "maximum": 255
          },
          "dataInicio": {
            "type": "string",
            "nullable": false,
            "description": "Início da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "dataFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência da preferência de agrupamento.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um diário por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioFindOneInputView"
              }
            ]
          }
        }
      },
      "HorarioGeradoFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Status do horário gerado."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do horário gerado."
          },
          "dataGeracao": {
            "type": "string",
            "nullable": true,
            "description": "Data em que o horário foi gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          },
          "vigenciaInicio": {
            "type": "string",
            "nullable": true,
            "description": "Início da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "vigenciaFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "calendario": {
            "nullable": false,
            "description": "Visão FindOne de um calendário letivo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneResultView"
              }
            ]
          },
          "dateCreated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da criação do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "nullable": false,
            "description": "Data e hora da alteração do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date_time.json",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "nullable": true,
            "description": "Data e hora da exclusão do registro.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          }
        },
        "required": ["id", "status", "tipo", "dataGeracao", "vigenciaInicio", "vigenciaFim", "calendario", "dateCreated", "dateUpdated", "dateDeleted"]
      },
      "HorarioGeradoListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGerado.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HorarioGeradoFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "HorarioGeradoInputCreateView": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Status do horário gerado."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do horário gerado."
          },
          "dataGeracao": {
            "type": "string",
            "nullable": true,
            "description": "Data em que o horário foi gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          },
          "vigenciaInicio": {
            "type": "string",
            "nullable": true,
            "description": "Início da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "vigenciaFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        },
        "required": ["status", "tipo", "dataGeracao", "vigenciaInicio", "vigenciaFim", "calendario"]
      },
      "HorarioGeradoInputUpdateView": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true,
            "description": "Status do horário gerado."
          },
          "tipo": {
            "type": "string",
            "nullable": true,
            "description": "Tipo do horário gerado."
          },
          "dataGeracao": {
            "type": "string",
            "nullable": true,
            "description": "Data em que o horário foi gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date-time"
          },
          "vigenciaInicio": {
            "type": "string",
            "nullable": true,
            "description": "Início da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "vigenciaFim": {
            "type": "string",
            "nullable": true,
            "description": "Fim da vigência do horário gerado.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "format": "date"
          },
          "calendario": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um calendário letivo por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/CalendarioLetivoFindOneInputView"
              }
            ]
          }
        }
      },
      "HorarioGeradoAulaFindOneResultView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid"
          },
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Data da aula gerada.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Visão FindOne de um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoFindOneResultView"
              }
            ]
          },
          "diarioProfessor": {
            "nullable": false,
            "description": "Visão FindOne de um DiarioProfessor.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioProfessorFindOneResultView"
              }
            ]
          },
          "horarioGerado": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGerado.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/HorarioGeradoFindOneResultView"
              }
            ]
          }
        },
        "required": ["id", "data", "intervaloDeTempo", "diarioProfessor", "horarioGerado"]
      },
      "HorarioGeradoAulaListResultView": {
        "type": "object",
        "properties": {
          "meta": {
            "nullable": false,
            "description": "Metadados da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultMetaView"
              }
            ]
          },
          "data": {
            "nullable": false,
            "description": "Visão FindOne de um HorarioGeradoAula.",
            "kind": "type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HorarioGeradoAulaFindOneResultView"
            }
          },
          "links": {
            "nullable": false,
            "description": "Links da busca.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginatedResultLinksView"
              }
            ]
          }
        },
        "required": ["meta", "data", "links"]
      },
      "DiarioProfessorFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "DiarioProfessor"
          }
        },
        "required": ["id"]
      },
      "HorarioGeradoFindOneInputView": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Identificador do registro (uuid).",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/uuid.json",
            "format": "uuid",
            "x-unispec-constraint-entity-exists": "HorarioGerado"
          }
        },
        "required": ["id"]
      },
      "HorarioGeradoAulaInputCreateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Data da aula gerada.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diarioProfessor": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um DiarioProfessor por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioProfessorFindOneInputView"
              }
            ]
          },
          "horarioGerado": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um HorarioGerado por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/HorarioGeradoFindOneInputView"
              }
            ]
          }
        },
        "required": ["data", "intervaloDeTempo", "diarioProfessor", "horarioGerado"]
      },
      "HorarioGeradoAulaInputUpdateView": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": false,
            "description": "Data da aula gerada.",
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "ladesa://schemas/v3/generics/date.json",
            "format": "date"
          },
          "intervaloDeTempo": {
            "nullable": false,
            "description": "Dados de entrada para um Intervalo de Tempo.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/IntervaloDeTempoInputView"
              }
            ]
          },
          "diarioProfessor": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um DiarioProfessor por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiarioProfessorFindOneInputView"
              }
            ]
          },
          "horarioGerado": {
            "nullable": false,
            "description": "Dados de entrada para encontrar um HorarioGerado por ID.",
            "kind": "type",
            "allOf": [
              {
                "$ref": "#/components/schemas/HorarioGeradoFindOneInputView"
              }
            ]
          }
        }
      }
    }
  }
}
