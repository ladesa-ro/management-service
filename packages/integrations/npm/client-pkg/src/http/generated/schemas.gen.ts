// This file is auto-generated by @hey-presentation/openapi-ts

export const $GradeHorarioOfertaFormacaoCreateInput = {
  type: 'object',
  required: ['campus', 'ofertaFormacao'],
  properties: {
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma oferta de formação.'
} as const;

export const $GradeHorarioOfertaFormacaoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma oferta de formação por ID.'
} as const;

export const $GradeHorarioOfertaFormacaoFindOneOutput = {
  type: 'object',
  required: ['id', 'campus', 'ofertaFormacao', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma oferta de formação.'
} as const;

export const $GradeHorarioOfertaFormacaoIntervaloDeTempoCreateInput = {
  type: 'object',
  required: ['gradeHorarioOfertaFormacao', 'intervaloDeTempo'],
  properties: {
    gradeHorarioOfertaFormacao: {
      '$ref': '#/components/schemas/GradeHorarioOfertaFormacaoFindOneInput'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    }
  },
  description: 'Dados de entrada para a criação de uma oferta de formação.'
} as const;

export const $GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneOutput = {
  type: 'object',
  required: ['id', 'gradeHorarioOfertaFormacao', 'intervaloDeTempo', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    gradeHorarioOfertaFormacao: {
      '$ref': '#/components/schemas/GradeHorarioOfertaFormacaoFindOneOutput'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma oferta de formação.'
} as const;

export const $GradeHorarioOfertaFormacaoIntervaloDeTempoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a GradeHorarioOfertaFormacaoIntervaloDeTempos.'
} as const;

export const $GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateInput = {
  type: 'object',
  properties: {
    gradeHorarioOfertaFormacao: {
      '$ref': '#/components/schemas/GradeHorarioOfertaFormacaoFindOneInput'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma oferta de formação.'
} as const;

export const $GradeHorarioOfertaFormacaoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/GradeHorarioOfertaFormacaoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a GradeHorarioOfertaFormacaos.'
} as const;

export const $GradeHorarioOfertaFormacaoUpdateInput = {
  type: 'object',
  properties: {
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AmbienteCreateInput = {
  type: 'object',
  required: ['nome', 'descricao', 'codigo', 'capacidade', 'tipo', 'bloco'],
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do ambiente/sala.'
    },
    descricao: {
      type: 'string',
      nullable: true,
      description: 'Descrição do ambiente/sala.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do ambiente/sala.'
    },
    capacidade: {
      type: 'integer',
      nullable: true,
      description: 'Capacidade do ambiente/sala.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.'
    },
    bloco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.BlocoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um ambiente.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AmbienteFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um ambiente por id.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AmbienteFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'descricao', 'codigo', 'capacidade', 'tipo', 'bloco', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do ambiente/sala.'
    },
    descricao: {
      type: 'string',
      nullable: true,
      description: 'Descrição do ambiente/sala.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do ambiente/sala.'
    },
    capacidade: {
      type: 'integer',
      nullable: true,
      description: 'Capacidade do ambiente/sala.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.'
    },
    bloco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.BlocoFindOneOutput'
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um ambiente.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AmbienteListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Visão da busca a ambientes.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AmbienteUpdateInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do ambiente/sala.'
    },
    descricao: {
      type: 'string',
      nullable: true,
      description: 'Descrição do ambiente/sala.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do ambiente/sala.'
    },
    capacidade: {
      type: 'integer',
      nullable: true,
      description: 'Capacidade do ambiente/sala.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.'
    },
    bloco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.BlocoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um ambiente.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ArquivoFindOneOutput = {
  type: 'object',
  required: ['id', 'name', 'mimeType', 'sizeBytes', 'storageType', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    name: {
      type: 'string',
      nullable: true,
      description: 'Nome do arquivo.'
    },
    mimeType: {
      type: 'string',
      nullable: true,
      description: 'Formato do arquivo.'
    },
    sizeBytes: {
      type: 'integer',
      nullable: true,
      description: 'Tamanho do arquivo (em bytes).'
    },
    storageType: {
      type: 'string',
      description: 'Estratégia de armazenamento do conteúdo.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Dados de saída para encontrar um arquivo por id.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AulaCreateInput = {
  type: 'object',
  required: ['data', 'modalidade', 'intervaloDeTempo', 'diario', 'ambiente'],
  properties: {
    data: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    modalidade: {
      type: 'string',
      nullable: true
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    },
    ambiente: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a criação de uma Aula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AulaFindOneOutput = {
  type: 'object',
  required: ['id', 'data', 'modalidade', 'intervaloDeTempo', 'diario', 'ambiente', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    data: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data da aula.'
    },
    modalidade: {
      type: 'string',
      nullable: true,
      description: 'Modalidade da aula.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoFindOneOutput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneOutput'
    },
    ambiente: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Aula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AulaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AulaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Aulas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AulaUpdateInput = {
  type: 'object',
  properties: {
    data: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    modalidade: {
      type: 'string',
      nullable: true
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    },
    ambiente: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a atualização de uma Aula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthCredentialsSetInitialPasswordInput = {
  type: 'object',
  required: ['matriculaSiape', 'senha'],
  properties: {
    matriculaSiape: {
      type: 'string',
      description: 'Matrícula SIAPE.'
    },
    senha: {
      type: 'string',
      description: 'Nova senha.'
    }
  },
  description: 'Dados de entrada para definir a senha inicial.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthLoginInput = {
  type: 'object',
  required: ['matriculaSiape', 'senha'],
  properties: {
    matriculaSiape: {
      type: 'string',
      description: 'Matrícula SIAPE.'
    },
    senha: {
      type: 'string',
      description: 'Senha do usuário.'
    }
  },
  description: 'Dados de entrada para autenticação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthRecoverPasswordInput = {
  type: 'object',
  required: ['email'],
  properties: {
    email: {
      type: 'string',
      description: 'E-mail.'
    }
  },
  description: 'Dados de entrada para autenticação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthRefreshInput = {
  type: 'object',
  required: ['refreshToken'],
  properties: {
    refreshToken: {
      type: 'string',
      description: 'Token de refresh.'
    }
  },
  description: 'Dados de entrada para refresh de autenticação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthSessionCredentialsView = {
  type: 'object',
  required: ['access_token', 'token_type', 'id_token', 'refresh_token', 'expires_in', 'expires_at', 'session_state', 'scope'],
  properties: {
    access_token: {
      type: 'string',
      nullable: true,
      description: 'Token de acesso.'
    },
    token_type: {
      type: 'string',
      nullable: true,
      description: 'Tipo do token.'
    },
    id_token: {
      type: 'string',
      nullable: true,
      description: 'Token de identificação.'
    },
    refresh_token: {
      type: 'string',
      nullable: true,
      description: 'Token de refresh.'
    },
    expires_in: {
      type: 'integer',
      nullable: true,
      description: 'Tempo de expiração do token.'
    },
    expires_at: {
      type: 'integer',
      nullable: true,
      description: 'Tempo de expiração do token.'
    },
    session_state: {
      type: 'string',
      nullable: true,
      description: 'Estado da sessão.'
    },
    scope: {
      type: 'string',
      nullable: true,
      description: 'Escopo da autenticação.'
    }
  },
  description: 'Credenciais de sessão.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_AuthWhoAmIOutput = {
  type: 'object',
  required: ['usuario', 'perfisAtivos'],
  properties: {
    usuario: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
        }
      ],
      nullable: true,
      description: 'Usuário autenticado.'
    },
    perfisAtivos: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneOutput'
      },
      description: 'Vínculos do usuário logado.'
    }
  },
  description: 'Informações sobre o ator..'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_BlocoCreateInput = {
  type: 'object',
  required: ['nome', 'codigo', 'campus'],
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do Bloco.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do Bloco.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um bloco.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_BlocoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um bloco por id.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_BlocoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'codigo', 'campus', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do Bloco.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do Bloco.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um bloco.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_BlocoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.BlocoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a blocos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_BlocoUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do Bloco.'
    },
    codigo: {
      type: 'string',
      minLength: 1,
      description: 'Código do Bloco.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um bloco.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CalendarioLetivoCreateInput = {
  type: 'object',
  required: ['nome', 'ano', 'campus', 'ofertaFormacao'],
  properties: {
    nome: {
      type: 'string',
      description: 'Nome do calendário letivo.'
    },
    ano: {
      type: 'integer',
      format: 'uint16',
      description: 'Ano do calendário letivo.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um calendário letivo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CalendarioLetivoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um calendário letivo por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CalendarioLetivoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'ano', 'campus', 'ofertaFormacao', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      description: 'Nome do calendário letivo.'
    },
    ano: {
      type: 'integer',
      format: 'uint16',
      description: 'Ano do calendário letivo.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um calendário letivo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CalendarioLetivoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a CalendarioLetivos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CalendarioLetivoUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      description: 'Nome do calendário letivo.'
    },
    ano: {
      type: 'integer',
      format: 'uint16',
      description: 'Ano do calendário letivo.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um calendário letivo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CampusCreateInput = {
  type: 'object',
  required: ['nomeFantasia', 'razaoSocial', 'apelido', 'cnpj', 'endereco'],
  properties: {
    nomeFantasia: {
      type: 'string',
      minLength: 1,
      description: 'Nome fantasia do campus.'
    },
    razaoSocial: {
      type: 'string',
      minLength: 1,
      description: 'Razão social do campus.'
    },
    apelido: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do campus.'
    },
    cnpj: {
      type: 'string',
      minLength: 1,
      description: 'CNPJ do campus.'
    },
    endereco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EnderecoInput'
    }
  },
  description: 'Dados de entrada para a criação de um campus.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CampusFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um campus por id.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CampusFindOneOutput = {
  type: 'object',
  required: ['id', 'nomeFantasia', 'razaoSocial', 'apelido', 'cnpj', 'endereco', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nomeFantasia: {
      type: 'string',
      minLength: 1,
      description: 'Nome fantasia do campus.'
    },
    razaoSocial: {
      type: 'string',
      minLength: 1,
      description: 'Razão social do campus.'
    },
    apelido: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do campus.'
    },
    cnpj: {
      type: 'string',
      minLength: 1,
      description: 'CNPJ do campus.'
    },
    endereco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EnderecoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um campus.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CampusListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a campi.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CampusUpdateInput = {
  type: 'object',
  properties: {
    nomeFantasia: {
      type: 'string',
      minLength: 1,
      description: 'Nome fantasia do campus.'
    },
    razaoSocial: {
      type: 'string',
      minLength: 1,
      description: 'Razão social do campus.'
    },
    apelido: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do campus.'
    },
    cnpj: {
      type: 'string',
      minLength: 1,
      description: 'CNPJ do campus.'
    },
    endereco: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EnderecoInput'
    }
  },
  description: 'Dados de entrada para a atualização de um campus.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CidadeFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_integer'
        }
      ],
      description: 'Identificador do registro (numérico).'
    }
  },
  description: 'Dados de entrada para encontrar uma cidade por id.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CidadeFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'estado'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_integer'
        }
      ],
      description: 'Identificador do registro (numérico).'
    },
    nome: {
      type: 'string',
      description: 'Nome oficial da cidade.'
    },
    estado: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EstadoFindOneOutput'
    }
  },
  description: 'Visão FindOne de uma cidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CidadeListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CidadeFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a cidades.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CursoCreateInput = {
  type: 'object',
  required: ['nome', 'nomeAbreviado', 'campus', 'ofertaFormacao'],
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do curso.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado do curso.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um Curso.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CursoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um Curso por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CursoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'nomeAbreviado', 'campus', 'ofertaFormacao', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do curso.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado do curso.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneOutput'
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um Curso.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CursoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Cursos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_CursoUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome do curso.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado do curso.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um Curso.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiaCalendarioCreateInput = {
  type: 'object',
  required: ['data', 'feriado', 'diaLetivo', 'calendario', 'diaPresencial', 'tipo', 'extraCurricular'],
  properties: {
    data: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    feriado: {
      type: 'string',
      nullable: true
    },
    diaLetivo: {
      type: 'boolean'
    },
    calendario: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
        }
      ],
      nullable: true
    },
    diaPresencial: {
      type: 'boolean'
    },
    tipo: {
      type: 'string'
    },
    extraCurricular: {
      type: 'boolean'
    }
  },
  description: 'Dados de entrada para a criação de um DiaCalendario.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiaCalendarioFindOneOutput = {
  type: 'object',
  required: ['id', 'data', 'diaLetivo', 'feriado', 'calendario', 'diaPresencial', 'Tipo', 'extraCurricular', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    data: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data'
    },
    diaLetivo: {
      type: 'boolean',
      description: 'Indica se o dia é letivo'
    },
    feriado: {
      type: 'string',
      nullable: true,
      description: 'Nome do feriado (ou null se não for)'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
    },
    diaPresencial: {
      type: 'boolean',
      description: 'Indica se o dia é presencial'
    },
    Tipo: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TipoDiaCalendario'
        }
      ],
      description: 'Indica o tipo do feriado, se é nacional, estadual ou municipal'
    },
    extraCurricular: {
      type: 'boolean',
      description: 'Indica se o dia é extracurricular'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um DiaCalendario.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiaCalendarioListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiaCalendarioFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a DiaCalendarios.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiaCalendarioUpdateInput = {
  type: 'object',
  properties: {
    data: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    feriado: {
      type: 'string',
      nullable: true
    },
    diaLetivo: {
      type: 'boolean'
    },
    calendario: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
        }
      ],
      nullable: true
    },
    diaPresencial: {
      type: 'boolean'
    },
    tipo: {
      type: 'string'
    },
    extraCurricular: {
      type: 'boolean'
    }
  },
  description: 'Dados de entrada para a atualização de um DiaCalendario.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioCreateInput = {
  type: 'object',
  required: ['ativo', 'calendarioLetivo', 'turma', 'disciplina', 'ambientePadrao'],
  properties: {
    ativo: {
      type: 'boolean'
    },
    calendarioLetivo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneInput'
    },
    disciplina: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneInput'
    },
    ambientePadrao: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a criação de um diário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um diário por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioFindOneOutput = {
  type: 'object',
  required: ['id', 'ativo', 'calendarioLetivo', 'turma', 'disciplina', 'ambientePadrao', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    ativo: {
      type: 'boolean',
      description: 'Situação do diário.'
    },
    calendarioLetivo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneOutput'
    },
    disciplina: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneOutput'
    },
    ambientePadrao: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneOutput'
        }
      ],
      nullable: true
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um diário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Diarios.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioPreferenciaAgrupamentoCreateInput = {
  type: 'object',
  required: ['diaSemanaIso', 'aulasSeguidas', 'dataInicio', 'dataFim', 'intervaloDeTempo', 'diario'],
  properties: {
    diaSemanaIso: {
      type: 'integer',
      format: 'uint8',
      description: 'Dia da semana.'
    },
    aulasSeguidas: {
      type: 'integer',
      format: 'uint8',
      description: 'Quantidade de aulas seguidas.'
    },
    dataInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Início da vigência da preferência de agrupamento.'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência da preferência de agrupamento.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um DiarioPreferenciaAgrupamento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioPreferenciaAgrupamentoFindOneOutput = {
  type: 'object',
  required: ['id', 'dataInicio', 'dataFim', 'diaSemanaIso', 'aulasSeguidas', 'intervaloDeTempo', 'diario', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    dataInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Início da vigência da preferência de agrupamento.'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência da preferência de agrupamento.'
    },
    diaSemanaIso: {
      type: 'integer',
      format: 'uint8',
      description: 'Dia da semana.'
    },
    aulasSeguidas: {
      type: 'integer',
      format: 'uint8',
      description: 'Quantidade de aulas seguidas.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoFindOneOutput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um DiarioPreferenciaAgrupamento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioPreferenciaAgrupamentoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioPreferenciaAgrupamentoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca de DiarioPreferenciaAgrupamentos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioPreferenciaAgrupamentoUpdateInput = {
  type: 'object',
  properties: {
    diaSemanaIso: {
      type: 'integer',
      format: 'uint8',
      description: 'Dia da semana.'
    },
    aulasSeguidas: {
      type: 'integer',
      format: 'uint8',
      description: 'Quantidade de aulas seguidas.'
    },
    dataInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Início da vigência da preferência de agrupamento.'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência da preferência de agrupamento.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um DiarioPreferenciaAgrupamento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioProfessorCreateInput = {
  type: 'object',
  required: ['situacao', 'perfil', 'diario'],
  properties: {
    situacao: {
      type: 'boolean'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um DiarioProfessor.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioProfessorFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um DiarioProfessor por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioProfessorFindOneOutput = {
  type: 'object',
  required: ['id', 'situacao', 'perfil', 'diario', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    situacao: {
      type: 'boolean',
      description: 'Situação do vínculo.'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneOutput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um DiarioProfessor.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioProfessorListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioProfessorFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a DiarioProfessor.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioProfessorUpdateInput = {
  type: 'object',
  properties: {
    situacao: {
      type: 'boolean'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneInput'
    },
    diario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um DiarioProfessor.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DiarioUpdateInput = {
  type: 'object',
  properties: {
    ativo: {
      type: 'boolean'
    },
    calendarioLetivo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneInput'
    },
    disciplina: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneInput'
    },
    ambientePadrao: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a atualização de um diário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisciplinaCreateInput = {
  type: 'object',
  required: ['nome', 'nomeAbreviado', 'cargaHoraria'],
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da disciplina.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado da disciplina.'
    },
    cargaHoraria: {
      type: 'integer',
      format: 'uint16',
      minimum: 1,
      description: 'Carga horária da disciplina.'
    }
  },
  description: 'Dados de entrada para a criação de uma Disciplina.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisciplinaFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma Disciplina por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisciplinaFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'nomeAbreviado', 'cargaHoraria', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da disciplina.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado da disciplina.'
    },
    cargaHoraria: {
      type: 'integer',
      format: 'uint16',
      minimum: 1,
      description: 'Carga horária da disciplina.'
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Disciplina.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisciplinaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Disciplinas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisciplinaUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da disciplina.'
    },
    nomeAbreviado: {
      type: 'string',
      minLength: 1,
      description: 'Nome abreviado da disciplina.'
    },
    cargaHoraria: {
      type: 'integer',
      format: 'uint16',
      minimum: 1,
      description: 'Carga horária da disciplina.'
    }
  },
  description: 'Dados de entrada para a atualização de uma Disciplina.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisponibilidadeCreateInput = {
  type: 'object',
  required: ['dataInicio', 'dataFim'],
  properties: {
    dataInicio: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a criação de uma Disponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisponibilidadeFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma Disponibilidade por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisponibilidadeFindOneOutput = {
  type: 'object',
  required: ['id', 'dataInicio', 'dataFim', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    dataInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data de início.'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Data de término.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Disponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisponibilidadeListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Disponibilidades.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_DisponibilidadeUpdateInput = {
  type: 'object',
  properties: {
    dataInicio: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    dataFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a atualização de uma Disponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EnderecoFindOneOutput = {
  type: 'object',
  required: ['id', 'cep', 'logradouro', 'numero', 'bairro', 'complemento', 'pontoReferencia', 'cidade', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    cep: {
      type: 'string',
      description: 'Código postal (CEP).'
    },
    logradouro: {
      type: 'string',
      description: 'Logradouro.'
    },
    numero: {
      type: 'integer',
      format: 'uint16',
      minimum: 0,
      maximum: 99999,
      description: 'Número.'
    },
    bairro: {
      type: 'string',
      description: 'Bairro.'
    },
    complemento: {
      type: 'string',
      nullable: true,
      description: 'Complemento.'
    },
    pontoReferencia: {
      type: 'string',
      nullable: true,
      description: 'Ponto de referência.'
    },
    cidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CidadeFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um endereço.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EnderecoInput = {
  type: 'object',
  required: ['cep', 'logradouro', 'numero', 'bairro', 'complemento', 'pontoReferencia', 'cidade'],
  properties: {
    cep: {
      type: 'string',
      description: 'Código postal (CEP).'
    },
    logradouro: {
      type: 'string',
      description: 'Logradouro.'
    },
    numero: {
      type: 'integer',
      format: 'uint16',
      minimum: 0,
      maximum: 99999,
      description: 'Número.'
    },
    bairro: {
      type: 'string',
      description: 'Bairro.'
    },
    complemento: {
      type: 'string',
      nullable: true,
      description: 'Complemento.'
    },
    pontoReferencia: {
      type: 'string',
      nullable: true,
      description: 'Ponto de referência.'
    },
    cidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CidadeFindOneInput'
    }
  },
  description: 'Dados de entrada para um endereco.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EstadoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'sigla'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_integer'
        }
      ],
      description: 'Identificador do registro (numérico).'
    },
    nome: {
      type: 'string',
      description: 'Nome oficial do estado.'
    },
    sigla: {
      type: 'string',
      description: 'Sigla do estado.'
    }
  },
  description: 'Visão FindOne de um estado.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EstadoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EstadoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a estados.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EtapaCreateInput = {
  type: 'object',
  required: ['numero', 'dataInicio', 'dataTermino', 'cor', 'calendario'],
  properties: {
    numero: {
      type: 'integer',
      format: 'uint8',
      nullable: true
    },
    dataInicio: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    dataTermino: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    cor: {
      type: 'string',
      nullable: true
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma Etapa.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EtapaFindOneOutput = {
  type: 'object',
  required: ['id', 'numero', 'dataInicio', 'dataTermino', 'cor', 'calendario', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    numero: {
      type: 'integer',
      format: 'uint8',
      nullable: true,
      description: 'Número da etapa.'
    },
    dataInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data de início.'
    },
    dataTermino: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data de término.'
    },
    cor: {
      type: 'string',
      nullable: true,
      description: 'Cor da etapa.'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Etapa.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EtapaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EtapaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Etapas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EtapaUpdateInput = {
  type: 'object',
  properties: {
    numero: {
      type: 'integer',
      format: 'uint8',
      nullable: true
    },
    dataInicio: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    dataTermino: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
    },
    cor: {
      type: 'string',
      nullable: true
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma Etapa.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EventoCreateInput = {
  type: 'object',
  required: ['nome', 'rrule', 'cor', 'calendario'],
  properties: {
    nome: {
      type: 'string',
      nullable: true
    },
    rrule: {
      type: 'string'
    },
    cor: {
      type: 'string',
      nullable: true
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    },
    data_inicio: {
      type: 'string',
      format: 'date-time'
    },
    data_fim: {
      type: 'string',
      format: 'date-time'
    }
  },
  description: 'Dados de entrada para a criação de um Evento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EventoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'rrule', 'cor', 'calendario', 'data_inicio', 'data_fim', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      nullable: true,
      description: 'Nome do evento.'
    },
    rrule: {
      type: 'string',
      description: 'Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.'
    },
    cor: {
      type: 'string',
      nullable: true,
      description: 'Cor da Evento.'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
    },
    data_inicio: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Data de início do evento.'
    },
    data_fim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Data de Termino do evento.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um Evento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EventoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.EventoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Eventos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_EventoUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      nullable: true
    },
    rrule: {
      type: 'string'
    },
    cor: {
      type: 'string',
      nullable: true
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    },
    data_inicio: {
      type: 'string',
      format: 'date-time'
    },
    data_fim: {
      type: 'string',
      format: 'date-time'
    }
  },
  description: 'Dados de entrada para a atualização de um Evento.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoAulaCreateInput = {
  type: 'object',
  required: ['data', 'intervaloDeTempo', 'diarioProfessor', 'horarioGerado'],
  properties: {
    data: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data da aula gerada.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diarioProfessor: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioProfessorFindOneInput'
    },
    horarioGerado: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.HorarioGeradoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um HorarioGeradoAula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoAulaFindOneOutput = {
  type: 'object',
  required: ['id', 'data', 'intervaloDeTempo', 'diarioProfessor', 'horarioGerado'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    data: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data da aula gerada.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoFindOneOutput'
    },
    diarioProfessor: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioProfessorFindOneOutput'
    },
    horarioGerado: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.HorarioGeradoFindOneOutput'
    }
  },
  description: 'Visão FindOne de um HorarioGeradoAula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoAulaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.HorarioGeradoAulaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca de HorarioGeradoAulas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoAulaUpdateInput = {
  type: 'object',
  properties: {
    data: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      description: 'Data da aula gerada.'
    },
    intervaloDeTempo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.IntervaloDeTempoInput'
    },
    diarioProfessor: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DiarioProfessorFindOneInput'
    },
    horarioGerado: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.HorarioGeradoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um HorarioGeradoAula.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoCreateInput = {
  type: 'object',
  required: ['status', 'tipo', 'dataGeracao', 'vigenciaInicio', 'vigenciaFim', 'calendario'],
  properties: {
    status: {
      type: 'string',
      nullable: true,
      description: 'Status do horário gerado.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do horário gerado.'
    },
    dataGeracao: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data em que o horário foi gerado.'
    },
    vigenciaInicio: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Início da vigência do horário gerado.'
    },
    vigenciaFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência do horário gerado.'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de um HorarioGerado.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um HorarioGerado por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoFindOneOutput = {
  type: 'object',
  required: ['id', 'status', 'tipo', 'dataGeracao', 'vigenciaInicio', 'vigenciaFim', 'calendario', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    status: {
      type: 'string',
      nullable: true,
      description: 'Status do horário gerado.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do horário gerado.'
    },
    dataGeracao: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data em que o horário foi gerado.'
    },
    vigenciaInicio: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Início da vigência do horário gerado.'
    },
    vigenciaFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência do horário gerado.'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um HorarioGerado.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.HorarioGeradoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca de HorariosGerados.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_HorarioGeradoUpdateInput = {
  type: 'object',
  properties: {
    status: {
      type: 'string',
      nullable: true,
      description: 'Status do horário gerado.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      description: 'Tipo do horário gerado.'
    },
    dataGeracao: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data em que o horário foi gerado.'
    },
    vigenciaInicio: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Início da vigência do horário gerado.'
    },
    vigenciaFim: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date'
        }
      ],
      nullable: true,
      description: 'Fim da vigência do horário gerado.'
    },
    calendario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CalendarioLetivoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de um HorarioGerado.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ImagemArquivoFindOneFromImagemOutput = {
  type: 'object',
  required: ['id', 'largura', 'altura', 'formato', 'mimeType', 'arquivo', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    largura: {
      type: 'integer',
      description: 'Largura da imagem.'
    },
    altura: {
      type: 'integer',
      description: 'Altura da imagem.'
    },
    formato: {
      type: 'string',
      description: 'Formato da imagem.'
    },
    mimeType: {
      type: 'string',
      description: 'Mime-type da imagem.'
    },
    arquivo: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ArquivoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOneFromImagem de uma versão de imagem.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ImagemFindOneOutput = {
  type: 'object',
  required: ['id', 'descricao', 'versoes', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    descricao: {
      type: 'string',
      nullable: true,
      description: 'Descrição da imagem.'
    },
    versoes: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemArquivoFindOneFromImagemOutput'
      }
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma imagem.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_IntervaloDeTempoFindOneOutput = {
  type: 'object',
  required: ['id', 'periodoInicio', 'periodoFim', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    periodoInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.time'
        }
      ],
      description: 'Horário que o intervalo de tempo inicia.'
    },
    periodoFim: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.time'
        }
      ],
      description: 'Horário que o intervalo de tempo termina.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um Intervalo de Tempo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_IntervaloDeTempoInput = {
  type: 'object',
  required: ['periodoInicio', 'periodoFim'],
  properties: {
    periodoInicio: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.time'
        }
      ],
      description: 'Horário que o intervalo de tempo inicia.'
    },
    periodoFim: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.time'
        }
      ],
      description: 'Horário que o intervalo de tempo termina.'
    }
  },
  description: 'Dados de entrada para um Intervalo de Tempo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ModalidadeCreateInput = {
  type: 'object',
  required: ['slug'],
  properties: {
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da modalidade.'
    }
  },
  description: 'Dados de entrada para a criação de uma modalidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ModalidadeFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma modalidade por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ModalidadeFindOneOutput = {
  type: 'object',
  required: ['id', 'slug', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da modalidade.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma modalidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ModalidadeListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ModalidadeFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Modalidades.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ModalidadeUpdateInput = {
  type: 'object',
  properties: {
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da modalidade.'
    }
  },
  description: 'Dados de entrada para a atualização de uma modalidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_NivelFormacaoCreateInput = {
  type: 'object',
  required: ['slug'],
  properties: {
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do nível de formação.'
    }
  },
  description: 'Dados de entrada para a criação de um nível de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_NivelFormacaoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um nível de formação por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_NivelFormacaoFindOneOutput = {
  type: 'object',
  required: ['id', 'slug', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do nível de formação.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um nível de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_NivelFormacaoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.NivelFormacaoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca aos níveis de formações.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_NivelFormacaoUpdateInput = {
  type: 'object',
  properties: {
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido do nível de formação.'
    }
  },
  description: 'Dados de entrada para a atualização de um nível de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoCreateInput = {
  type: 'object',
  required: ['nome', 'slug', 'modalidade'],
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da oferta de formação.'
    },
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da oferta de formação.'
    },
    modalidade: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ModalidadeFindOneInput'
        }
      ],
      description: 'Modalidade da oferta de formação.'
    }
  },
  description: 'Dados de entrada para a criação de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma oferta de formação por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'slug', 'modalidade', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da oferta de formação.'
    },
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da oferta de formação.'
    },
    modalidade: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ModalidadeFindOneOutput'
        }
      ],
      description: 'Modalidade da oferta de formação.'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a OfertaFormacaos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoNivelFormacaoCreateInput = {
  type: 'object',
  required: ['ofertaFormacao', 'nivelFormacao'],
  properties: {
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    },
    nivelFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.NivelFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoNivelFormacaoFindOneOutput = {
  type: 'object',
  required: ['id', 'ofertaFormacao', 'nivelFormacao', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneOutput'
    },
    nivelFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.NivelFormacaoFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoNivelFormacaoListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoNivelFormacaoFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a OfertaFormacaoNivelFormacaos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoNivelFormacaoUpdateInput = {
  type: 'object',
  properties: {
    ofertaFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.OfertaFormacaoFindOneInput'
    },
    nivelFormacao: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.NivelFormacaoFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_OfertaFormacaoUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      minLength: 1,
      description: 'Nome da oferta de formação.'
    },
    slug: {
      type: 'string',
      minLength: 1,
      description: 'Apelido da oferta de formação.'
    },
    modalidade: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ModalidadeFindOneInput'
        }
      ],
      description: 'Modalidade da oferta de formação.'
    }
  },
  description: 'Dados de entrada para a atualização de uma oferta de formação.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_PerfilEnsinoOutput = {
  type: 'object',
  required: ['usuario', 'disciplinas'],
  properties: {
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
    },
    disciplinas: {
      type: 'array',
      items: {
        type: 'object',
        properties: {
          disciplina: {
            '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneOutput'
          },
          cursos: {
            type: 'array',
            items: {
              type: 'object',
              properties: {
                curso: {
                  '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneOutput'
                },
                turmas: {
                  type: 'array',
                  items: {
                    type: 'object',
                    properties: {
                      turma: {
                        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneOutput'
                      }
                    },
                    required: ['turma']
                  }
                }
              },
              required: ['curso', 'turmas']
            }
          }
        },
        required: ['disciplina', 'cursos']
      }
    }
  }
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_PerfilFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um Vínculo por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_PerfilFindOneOutput = {
  type: 'object',
  required: ['id', 'ativo', 'cargo', 'campus', 'usuario', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    ativo: {
      type: 'boolean',
      description: 'Indica se o vínculo está ativo.'
    },
    cargo: {
      type: 'string',
      description: 'Cargo do usuário no vínculo.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneOutput'
    },
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um Vínculo.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_PerfilListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Vínculos.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_PerfilUpdateInput = {
  type: 'object',
  required: ['cargos', 'campus', 'usuario'],
  properties: {
    cargos: {
      type: 'array',
      items: {
        type: 'string'
      },
      description: 'Cargos do usuário no vínculo.'
    },
    campus: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CampusFindOneInput'
    },
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneInput'
    }
  },
  description: 'Dados de entrada para a alteração de vínculo de um Usuário a um Campus.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ProfessorDisponibilidadeCreateInput = {
  type: 'object',
  required: ['disponibilidade', 'perfil'],
  properties: {
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneInput'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma ProfessorDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ProfessorDisponibilidadeFindOneOutput = {
  type: 'object',
  required: ['id', 'disponibilidade', 'perfil', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneOutput'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma ProfessorDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ProfessorDisponibilidadeListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ProfessorDisponibilidadeFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a ProfessorDisponibilidades.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ProfessorDisponibilidadeUpdateInput = {
  type: 'object',
  properties: {
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneInput'
    },
    perfil: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.PerfilFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma ProfessorDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ReservaCreateInput = {
  type: 'object',
  required: ['situacao', 'motivo', 'tipo', 'rrule', 'usuario', 'ambiente'],
  properties: {
    situacao: {
      type: 'string',
      minLength: 1,
      description: 'Situação da reserva.'
    },
    motivo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Motivo da reserva.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Tipo da reserva.'
    },
    rrule: {
      type: 'string',
      description: 'Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.'
    },
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneInput'
    },
    ambiente: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma Reserva.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ReservaFindOneOutput = {
  type: 'object',
  required: ['id', 'situacao', 'motivo', 'tipo', 'rrule', 'usuario', 'ambiente', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    situacao: {
      type: 'string',
      minLength: 1,
      description: 'Situação da reserva.'
    },
    motivo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Motivo da reserva.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Tipo da reserva.'
    },
    rrule: {
      type: 'string',
      description: 'Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.'
    },
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
    },
    ambiente: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Reserva.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ReservaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ReservaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Reservas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_ReservaUpdateInput = {
  type: 'object',
  properties: {
    situacao: {
      type: 'string',
      minLength: 1,
      description: 'Situação da reserva.'
    },
    motivo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Motivo da reserva.'
    },
    tipo: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Tipo da reserva.'
    },
    rrule: {
      type: 'string',
      description: 'Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.'
    },
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneInput'
    },
    ambiente: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma Reserva.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TipoDiaCalendario = {
  type: 'string',
  enum: ['Aula Presencial', 'Aula Não Presencial (Letiva)', 'Feriado', 'Sábado', 'Domingo', 'Outro'],
  description: 'Tipos de dias possíveis no calendário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaCreateInput = {
  type: 'object',
  required: ['periodo', 'curso', 'ambientePadraoAula'],
  properties: {
    periodo: {
      type: 'string',
      minLength: 1,
      description: 'Período da Turma.'
    },
    curso: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneInput'
    },
    ambientePadraoAula: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a criação de uma Turma.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaDisponibilidadeCreateInput = {
  type: 'object',
  required: ['disponibilidade', 'turma'],
  properties: {
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneInput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneInput'
    }
  },
  description: 'Dados de entrada para a criação de uma TurmaDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaDisponibilidadeFindOneOutput = {
  type: 'object',
  required: ['id', 'disponibilidade', 'turma', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneOutput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneOutput'
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma TurmaDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaDisponibilidadeListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaDisponibilidadeFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a TurmaDisponibilidades.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaDisponibilidadeUpdateInput = {
  type: 'object',
  properties: {
    disponibilidade: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisponibilidadeFindOneInput'
    },
    turma: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneInput'
    }
  },
  description: 'Dados de entrada para a atualização de uma TurmaDisponibilidade.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar uma Turma por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaFindOneOutput = {
  type: 'object',
  required: ['id', 'periodo', 'curso', 'ambientePadraoAula', 'imagemCapa', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    periodo: {
      type: 'string',
      minLength: 1,
      description: 'Período da Turma.'
    },
    curso: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneOutput'
    },
    ambientePadraoAula: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneOutput'
        }
      ],
      nullable: true
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de uma Turma.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a Turmas.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_TurmaUpdateInput = {
  type: 'object',
  properties: {
    periodo: {
      type: 'string',
      minLength: 1,
      description: 'Período da Turma.'
    },
    curso: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneInput'
    },
    ambientePadraoAula: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.AmbienteFindOneInput'
        }
      ],
      nullable: true
    }
  },
  description: 'Dados de entrada para a atualização de uma Turma.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioCreateInput = {
  type: 'object',
  required: ['nome', 'matriculaSiape', 'email'],
  properties: {
    nome: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Nome do usuário.'
    },
    matriculaSiape: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Matrícula SIAPE do usuário.'
    },
    email: {
      type: 'string',
      nullable: true,
      format: 'email',
      description: 'E-mail do usuário.'
    }
  },
  description: 'Dados de entrada para a criação de um usuário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioEnsinoOutput = {
  type: 'object',
  required: ['usuario', 'disciplinas'],
  properties: {
    usuario: {
      '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
    },
    disciplinas: {
      type: 'array',
      items: {
        type: 'object',
        properties: {
          disciplina: {
            '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.DisciplinaFindOneOutput'
          },
          cursos: {
            type: 'array',
            items: {
              type: 'object',
              properties: {
                curso: {
                  '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.CursoFindOneOutput'
                },
                turmas: {
                  type: 'array',
                  items: {
                    type: 'object',
                    properties: {
                      turma: {
                        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.TurmaFindOneOutput'
                      }
                    },
                    required: ['turma']
                  }
                }
              },
              required: ['curso', 'turmas']
            }
          }
        },
        required: ['disciplina', 'cursos']
      }
    }
  }
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioFindOneInput = {
  type: 'object',
  required: ['id'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    }
  },
  description: 'Dados de entrada para encontrar um Usuário por ID.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioFindOneOutput = {
  type: 'object',
  required: ['id', 'nome', 'matriculaSiape', 'email', 'isSuperUser', 'imagemCapa', 'imagemPerfil', 'dateCreated', 'dateUpdated', 'dateDeleted'],
  properties: {
    id: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.id_uuid'
        }
      ],
      description: 'Identificador do registro (uuid).'
    },
    nome: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Nome do usuário.'
    },
    matriculaSiape: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Matrícula SIAPE do usuário.'
    },
    email: {
      type: 'string',
      nullable: true,
      format: 'email',
      description: 'E-mail do usuário.'
    },
    isSuperUser: {
      type: 'boolean',
      description: 'Diz que o usuário tem poderes de administrador.'
    },
    imagemCapa: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    imagemPerfil: {
      type: 'object',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.ImagemFindOneOutput'
        }
      ],
      nullable: true
    },
    dateCreated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da criação do registro.'
    },
    dateUpdated: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      description: 'Data e hora da alteração do registro.'
    },
    dateDeleted: {
      type: 'string',
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.date_time'
        }
      ],
      nullable: true,
      description: 'Data e hora da exclusão do registro.'
    }
  },
  description: 'Visão FindOne de um Usuário.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioListOutput = {
  type: 'object',
  required: ['meta', 'data'],
  properties: {
    meta: {
      allOf: [
        {
          '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Generics.Pagination.Output.Meta'
        }
      ],
      description: 'Metadados da busca.'
    },
    data: {
      type: 'array',
      items: {
        '$ref': '#/components/schemas/Ladesa.ManagementService.Domain.Contracts.UsuarioFindOneOutput'
      },
      description: 'Resultados da busca atual.'
    }
  },
  description: 'Resultados da busca a usuários.'
} as const;

export const $Ladesa_ManagementService_Domain_Contracts_UsuarioUpdateInput = {
  type: 'object',
  properties: {
    nome: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Nome do usuário.'
    },
    matriculaSiape: {
      type: 'string',
      nullable: true,
      minLength: 1,
      description: 'Matrícula SIAPE do usuário.'
    },
    email: {
      type: 'string',
      nullable: true,
      format: 'email',
      description: 'E-mail do usuário.'
    }
  },
  description: 'Dados de entrada para a atualização de um Usuário.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_Pagination_Output_Meta = {
  type: 'object',
  required: ['itemsPerPage', 'totalItems', 'currentPage', 'totalPages', 'search', 'sortBy', 'filter'],
  properties: {
    itemsPerPage: {
      type: 'integer',
      description: 'Quantidade de itens por página.'
    },
    totalItems: {
      type: 'integer',
      description: 'Total de itens.'
    },
    currentPage: {
      type: 'integer',
      description: 'Página atual.'
    },
    totalPages: {
      type: 'integer',
      description: 'Quantidade total de páginas.'
    },
    search: {
      type: 'string',
      description: 'Termo textual da busca.'
    },
    sortBy: {
      type: 'array',
      items: {
        type: 'string'
      },
      description: 'Ordenação.'
    },
    filter: {
      type: 'array',
      items: {
        type: 'string'
      },
      description: 'Filtros.'
    }
  },
  description: 'Metadados dos resultados de busca.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_date = {
  type: 'string',
  format: 'date',
  description: 'Date ISO 8601.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_date_time = {
  type: 'string',
  format: 'date-time',
  description: 'Date time ISO 8601.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_id_integer = {
  type: 'integer',
  minimum: 1,
  description: 'Identificador numérico.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_id_uuid = {
  type: 'string',
  format: 'uuid',
  description: 'Identificador Único Universal.'
} as const;

export const $Ladesa_ManagementService_Domain_Generics_time = {
  type: 'string',
  format: 'time',
  description: 'Time ISO 8601.'
} as const;