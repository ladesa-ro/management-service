// This file is auto-generated by @hey-api/openapi-ts

export const $AuthLoginInputView = {
  type: "object",
  properties: {
    matriculaSiape: {
      type: "string",
      description: "Matrícula SIAPE.",
      nullable: true,
    },
    senha: {
      type: "string",
      description: "Senha do usuário.",
      nullable: true,
    },
  },
  required: ["matriculaSiape", "senha"],
} as const;

export const $AuthRefreshInputView = {
  type: "object",
  properties: {
    refreshToken: {
      type: "string",
      description: "Token de refresh.",
      nullable: true,
    },
  },
  required: ["refreshToken"],
} as const;

export const $AuthSetInitialPasswordInputView = {
  type: "object",
  properties: {
    matriculaSiape: {
      type: "string",
      description: "Matrícula SIAPE.",
      nullable: true,
    },
    senha: {
      type: "string",
      description: "Nova senha.",
      nullable: true,
    },
  },
  required: ["matriculaSiape", "senha"],
} as const;

export const $UsuarioInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "null",
      minLength: 1,
      description: "Nome do usuário.",
      nullable: true,
    },
    matriculaSiape: {
      type: "null",
      minLength: 1,
      description: "Matrícula SIAPE do usuário.",
      nullable: true,
    },
    email: {
      type: "null",
      format: "email",
      description: "E-mail do usuário.",
      nullable: true,
    },
  },
  required: ["nome", "matriculaSiape", "email"],
} as const;

export const $UsuarioInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "null",
      minLength: 1,
      description: "Nome do usuário.",
      nullable: true,
    },
    matriculaSiape: {
      type: "null",
      minLength: 1,
      description: "Matrícula SIAPE do usuário.",
      nullable: true,
    },
    email: {
      type: "null",
      format: "email",
      description: "E-mail do usuário.",
      nullable: true,
    },
  },
} as const;

export const $CampusFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Campus",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $UsuarioFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Usuario",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $PerfilInputUpdateView = {
  type: "object",
  properties: {
    cargos: {
      nullable: true,
      type: "array",
      items: {
        type: "string",
      },
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
    usuario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/UsuarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um Usuário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "UsuarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/UsuarioFindOneInputView",
        },
      ],
    },
  },
  required: ["cargos", "campus", "usuario"],
} as const;

export const $CidadeFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/numeric_id.json",
      minimum: 1,
      description: "Identificador do registro (numérico).",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $EnderecoInputView = {
  type: "object",
  properties: {
    cep: {
      type: "string",
      description: "Código postal (CEP).",
      "x-unispec-constraint-cep": true,
      nullable: true,
    },
    logradouro: {
      type: "string",
      description: "Logradouro.",
      nullable: true,
    },
    numero: {
      type: "integer",
      minimum: 0,
      maximum: 99999,
      description: "Número.",
      nullable: true,
    },
    bairro: {
      type: "string",
      description: "Bairro.",
      nullable: true,
    },
    complemento: {
      type: "null",
      description: "Complemento.",
      nullable: true,
    },
    pontoReferencia: {
      type: "null",
      description: "Ponto de referência.",
      nullable: true,
    },
    cidade: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CidadeFindOneInputView.json",
      description: "Dados de entrada para encontrar uma cidade por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CidadeFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CidadeFindOneInputView",
        },
      ],
    },
  },
  required: ["cep", "logradouro", "numero", "bairro", "complemento", "pontoReferencia", "cidade"],
} as const;

export const $CampusInputCreateView = {
  type: "object",
  properties: {
    nomeFantasia: {
      type: "string",
      minLength: 1,
      description: "Nome fantasia do campus.",
      nullable: true,
    },
    razaoSocial: {
      type: "string",
      minLength: 1,
      description: "Razão social do campus.",
      nullable: true,
    },
    apelido: {
      type: "string",
      minLength: 1,
      description: "Apelido do campus.",
      nullable: true,
    },
    cnpj: {
      type: "string",
      minLength: 1,
      description: "CNPJ do campus.",
      nullable: true,
    },
    endereco: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/EnderecoInput.json",
      description: "Dados de entrada para um endereco.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "EnderecoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/EnderecoInputView",
        },
      ],
    },
  },
  required: ["nomeFantasia", "razaoSocial", "apelido", "cnpj", "endereco"],
} as const;

export const $CampusInputUpdateView = {
  type: "object",
  properties: {
    nomeFantasia: {
      type: "string",
      minLength: 1,
      description: "Nome fantasia do campus.",
      nullable: true,
    },
    razaoSocial: {
      type: "string",
      minLength: 1,
      description: "Razão social do campus.",
      nullable: true,
    },
    apelido: {
      type: "string",
      minLength: 1,
      description: "Apelido do campus.",
      nullable: true,
    },
    cnpj: {
      type: "string",
      minLength: 1,
      description: "CNPJ do campus.",
      nullable: true,
    },
    endereco: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/EnderecoInput.json",
      description: "Dados de entrada para um endereco.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "EnderecoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/EnderecoInputView",
        },
      ],
    },
  },
  required: ["endereco"],
} as const;

export const $ModalidadeInputCreateView = {
  type: "object",
  properties: {
    slug: {
      type: "string",
      minLength: 1,
      description: "Apelido da modalidade.",
      nullable: true,
    },
  },
  required: ["slug"],
} as const;

export const $ModalidadeInputUpdateView = {
  type: "object",
  properties: {
    slug: {
      type: "string",
      minLength: 1,
      description: "Apelido da modalidade.",
      nullable: true,
    },
  },
} as const;

export const $BlocoInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do Bloco.",
      nullable: true,
    },
    codigo: {
      type: "string",
      minLength: 1,
      description: "Código do Bloco.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
  },
  required: ["nome", "codigo", "campus"],
} as const;

export const $BlocoInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do Bloco.",
      nullable: true,
    },
    codigo: {
      type: "string",
      minLength: 1,
      description: "Código do Bloco.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
  },
  required: ["campus"],
} as const;

export const $BlocoFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Bloco",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $AmbienteInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do ambiente/sala.",
      nullable: true,
    },
    descricao: {
      type: "null",
      description: "Descrição do ambiente/sala.",
      nullable: true,
    },
    codigo: {
      type: "string",
      minLength: 1,
      description: "Código do ambiente/sala.",
      nullable: true,
    },
    capacidade: {
      type: "null",
      description: "Capacidade do ambiente/sala.",
      nullable: true,
    },
    tipo: {
      type: "null",
      description: "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.",
      nullable: true,
    },
    bloco: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/BlocoFindOneInputView.json",
      description: "Dados de entrada para encontrar um bloco por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "BlocoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/BlocoFindOneInputView",
        },
      ],
    },
  },
  required: ["nome", "descricao", "codigo", "capacidade", "tipo", "bloco"],
} as const;

export const $AmbienteInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do ambiente/sala.",
      nullable: true,
    },
    descricao: {
      type: "null",
      description: "Descrição do ambiente/sala.",
      nullable: true,
    },
    codigo: {
      type: "string",
      minLength: 1,
      description: "Código do ambiente/sala.",
      nullable: true,
    },
    capacidade: {
      type: "null",
      description: "Capacidade do ambiente/sala.",
      nullable: true,
    },
    tipo: {
      type: "null",
      description: "Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.",
      nullable: true,
    },
    bloco: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/BlocoFindOneInputView.json",
      description: "Dados de entrada para encontrar um bloco por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "BlocoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/BlocoFindOneInputView",
        },
      ],
    },
  },
  required: ["bloco"],
} as const;

export const $AmbienteFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Ambiente",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $ReservaInputCreateView = {
  type: "object",
  properties: {
    situacao: {
      type: "string",
      minLength: 1,
      description: "Situação da reserva.",
      nullable: true,
    },
    motivo: {
      type: "null",
      minLength: 1,
      description: "Motivo da reserva.",
      nullable: true,
    },
    tipo: {
      type: "null",
      minLength: 1,
      description: "Tipo da reserva.",
      nullable: true,
    },
    rrule: {
      type: "string",
      description: "Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.",
      nullable: true,
    },
    usuario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/UsuarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um Usuário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "UsuarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/UsuarioFindOneInputView",
        },
      ],
    },
    ambiente: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/AmbienteFindOneInputView.json",
      description: "Dados de entrada para encontrar um ambiente por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "AmbienteFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/AmbienteFindOneInputView",
        },
      ],
    },
  },
  required: ["situacao", "motivo", "tipo", "rrule", "usuario", "ambiente"],
} as const;

export const $ReservaInputUpdateView = {
  type: "object",
  properties: {
    situacao: {
      type: "string",
      minLength: 1,
      description: "Situação da reserva.",
      nullable: true,
    },
    motivo: {
      type: "null",
      minLength: 1,
      description: "Motivo da reserva.",
      nullable: true,
    },
    tipo: {
      type: "null",
      minLength: 1,
      description: "Tipo da reserva.",
      nullable: true,
    },
    rrule: {
      type: "string",
      description: "Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.",
      nullable: true,
    },
    usuario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/UsuarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um Usuário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "UsuarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/UsuarioFindOneInputView",
        },
      ],
    },
    ambiente: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/AmbienteFindOneInputView.json",
      description: "Dados de entrada para encontrar um ambiente por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "AmbienteFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/AmbienteFindOneInputView",
        },
      ],
    },
  },
  required: ["usuario", "ambiente"],
} as const;

export const $OfertaFormacaoFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "OfertaFormacao",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $CursoInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do curso.",
      nullable: true,
    },
    nomeAbreviado: {
      type: "string",
      minLength: 1,
      description: "Nome abreviado do curso.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
    ofertaFormacao: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/OfertaFormacaoFindOneInputView.json",
      description: "Dados de entrada para encontrar uma oferta de formação por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "OfertaFormacaoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/OfertaFormacaoFindOneInputView",
        },
      ],
    },
  },
  required: ["nome", "nomeAbreviado", "campus", "ofertaFormacao"],
} as const;

export const $CursoInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome do curso.",
      nullable: true,
    },
    nomeAbreviado: {
      type: "string",
      minLength: 1,
      description: "Nome abreviado do curso.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
    ofertaFormacao: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/OfertaFormacaoFindOneInputView.json",
      description: "Dados de entrada para encontrar uma oferta de formação por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "OfertaFormacaoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/OfertaFormacaoFindOneInputView",
        },
      ],
    },
  },
  required: ["campus", "ofertaFormacao"],
} as const;

export const $DisciplinaInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome da disciplina.",
      nullable: true,
    },
    nomeAbreviado: {
      type: "string",
      minLength: 1,
      description: "Nome abreviado da disciplina.",
      nullable: true,
    },
    cargaHoraria: {
      type: "integer",
      minimum: 1,
      maximum: 65535,
      description: "Carga horária da disciplina.",
      nullable: true,
    },
  },
  required: ["nome", "nomeAbreviado", "cargaHoraria"],
} as const;

export const $DisciplinaInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      minLength: 1,
      description: "Nome da disciplina.",
      nullable: true,
    },
    nomeAbreviado: {
      type: "string",
      minLength: 1,
      description: "Nome abreviado da disciplina.",
      nullable: true,
    },
    cargaHoraria: {
      type: "integer",
      minimum: 1,
      maximum: 65535,
      description: "Carga horária da disciplina.",
      nullable: true,
    },
  },
} as const;

export const $CursoFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Curso",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $TurmaInputCreateView = {
  type: "object",
  properties: {
    periodo: {
      type: "string",
      minLength: 1,
      description: "Período da Turma.",
      nullable: true,
    },
    curso: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CursoFindOneInputView.json",
      description: "Dados de entrada para encontrar um Curso por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CursoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CursoFindOneInputView",
        },
      ],
    },
    ambientePadraoAula: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/AmbienteFindOneInputView.json",
      description: "Dados de entrada para encontrar um ambiente por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "AmbienteFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/AmbienteFindOneInputView",
        },
      ],
    },
  },
  required: ["periodo", "curso", "ambientePadraoAula"],
} as const;

export const $TurmaInputUpdateView = {
  type: "object",
  properties: {
    periodo: {
      type: "string",
      minLength: 1,
      description: "Período da Turma.",
      nullable: true,
    },
    curso: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CursoFindOneInputView.json",
      description: "Dados de entrada para encontrar um Curso por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CursoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CursoFindOneInputView",
        },
      ],
    },
    ambientePadraoAula: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/AmbienteFindOneInputView.json",
      description: "Dados de entrada para encontrar um ambiente por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "AmbienteFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/AmbienteFindOneInputView",
        },
      ],
    },
  },
  required: ["curso", "ambientePadraoAula"],
} as const;

export const $CalendarioLetivoInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      description: "Nome do calendário letivo.",
      nullable: true,
    },
    ano: {
      type: "integer",
      minimum: 0,
      maximum: 65535,
      description: "Ano do calendário letivo.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
    ofertaFormacao: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/OfertaFormacaoFindOneInputView.json",
      description: "Dados de entrada para encontrar uma oferta de formação por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "OfertaFormacaoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/OfertaFormacaoFindOneInputView",
        },
      ],
    },
  },
  required: ["nome", "ano", "campus", "ofertaFormacao"],
} as const;

export const $CalendarioLetivoInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "string",
      description: "Nome do calendário letivo.",
      nullable: true,
    },
    ano: {
      type: "integer",
      minimum: 0,
      maximum: 65535,
      description: "Ano do calendário letivo.",
      nullable: true,
    },
    campus: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CampusFindOneInputView.json",
      description: "Dados de entrada para encontrar um campus por id.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CampusFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CampusFindOneInputView",
        },
      ],
    },
    ofertaFormacao: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/OfertaFormacaoFindOneInputView.json",
      description: "Dados de entrada para encontrar uma oferta de formação por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "OfertaFormacaoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/OfertaFormacaoFindOneInputView",
        },
      ],
    },
  },
  required: ["campus", "ofertaFormacao"],
} as const;

export const $CalendarioLetivoFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "CalendarioLetivo",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $EventoInputCreateView = {
  type: "object",
  properties: {
    nome: {
      type: "null",
      nullable: true,
    },
    rrule: {
      type: "string",
      nullable: true,
    },
    cor: {
      type: "null",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["nome", "rrule", "cor", "calendario"],
} as const;

export const $EventoInputUpdateView = {
  type: "object",
  properties: {
    nome: {
      type: "null",
      nullable: true,
    },
    rrule: {
      type: "string",
      nullable: true,
    },
    cor: {
      type: "null",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["calendario"],
} as const;

export const $DiaCalendarioInputCreateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    feriado: {
      type: "boolean",
      nullable: true,
    },
    diaLetivo: {
      type: "boolean",
      nullable: true,
    },
    calendario: {
      type: "null",
      nullable: true,
    },
  },
  required: ["data", "feriado", "diaLetivo", "calendario"],
} as const;

export const $DiaCalendarioInputUpdateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    feriado: {
      type: "boolean",
      nullable: true,
    },
    diaLetivo: {
      type: "boolean",
      nullable: true,
    },
    calendario: {
      type: "null",
      nullable: true,
    },
  },
} as const;

export const $TurmaFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Turma",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $DisciplinaFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Disciplina",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $DiarioInputCreateView = {
  type: "object",
  properties: {
    ativo: {
      type: "boolean",
      nullable: true,
    },
    calendarioLetivo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
    turma: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/TurmaFindOneInputView.json",
      description: "Dados de entrada para encontrar uma Turma por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "TurmaFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/TurmaFindOneInputView",
        },
      ],
    },
    disciplina: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DisciplinaFindOneInputView.json",
      description: "Dados de entrada para encontrar uma Disciplina por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DisciplinaFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DisciplinaFindOneInputView",
        },
      ],
    },
    ambientePadrao: {
      type: "null",
      nullable: true,
    },
  },
  required: ["ativo", "calendarioLetivo", "turma", "disciplina", "ambientePadrao"],
} as const;

export const $DiarioInputUpdateView = {
  type: "object",
  properties: {
    ativo: {
      type: "boolean",
      nullable: true,
    },
    calendarioLetivo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
    turma: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/TurmaFindOneInputView.json",
      description: "Dados de entrada para encontrar uma Turma por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "TurmaFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/TurmaFindOneInputView",
        },
      ],
    },
    disciplina: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DisciplinaFindOneInputView.json",
      description: "Dados de entrada para encontrar uma Disciplina por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DisciplinaFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DisciplinaFindOneInputView",
        },
      ],
    },
    ambientePadrao: {
      type: "null",
      nullable: true,
    },
  },
  required: ["calendarioLetivo", "turma", "disciplina"],
} as const;

export const $PerfilFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Perfil",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $DiarioFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "Diario",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $DiarioProfessorInputCreateView = {
  type: "object",
  properties: {
    situacao: {
      type: "boolean",
      nullable: true,
    },
    perfil: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/PerfilFindOneInputView.json",
      description: "Dados de entrada para encontrar um Vínculo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "PerfilFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/PerfilFindOneInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
  },
  required: ["situacao", "perfil", "diario"],
} as const;

export const $DiarioProfessorInputUpdateView = {
  type: "object",
  properties: {
    situacao: {
      type: "boolean",
      nullable: true,
    },
    perfil: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/PerfilFindOneInputView.json",
      description: "Dados de entrada para encontrar um Vínculo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "PerfilFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/PerfilFindOneInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
  },
  required: ["perfil", "diario"],
} as const;

export const $EtapaInputCreateView = {
  type: "object",
  properties: {
    numero: {
      type: "null",
      nullable: true,
    },
    dataInicio: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    dataTermino: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    cor: {
      type: "null",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["numero", "dataInicio", "dataTermino", "cor", "calendario"],
} as const;

export const $EtapaInputUpdateView = {
  type: "object",
  properties: {
    numero: {
      type: "null",
      nullable: true,
    },
    dataInicio: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    dataTermino: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    cor: {
      type: "null",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["calendario"],
} as const;

export const $IntervaloDeTempoInputView = {
  type: "object",
  properties: {
    periodoInicio: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/time.json",
      format: "time",
      description: "Horário que o intervalo de tempo inicia.",
      nullable: true,
    },
    periodoFim: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/time.json",
      format: "time",
      description: "Horário que o intervalo de tempo termina.",
      nullable: true,
    },
  },
  required: ["periodoInicio", "periodoFim"],
} as const;

export const $AulaInputCreateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    modalidade: {
      type: "null",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
    ambiente: {
      type: "null",
      nullable: true,
    },
  },
  required: ["data", "modalidade", "intervaloDeTempo", "diario", "ambiente"],
} as const;

export const $AulaInputUpdateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Date ISO 8601.",
      nullable: true,
    },
    modalidade: {
      type: "null",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
    ambiente: {
      type: "null",
      nullable: true,
    },
  },
  required: ["intervaloDeTempo", "diario"],
} as const;

export const $DiarioPreferenciaAgrupamentoInputCreateView = {
  type: "object",
  properties: {
    diaSemanaIso: {
      type: "integer",
      minimum: 0,
      maximum: 255,
      description: "Dia da semana.",
      nullable: true,
    },
    aulasSeguidas: {
      type: "integer",
      minimum: 0,
      maximum: 255,
      description: "Quantidade de aulas seguidas.",
      nullable: true,
    },
    dataInicio: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Início da vigência da preferência de agrupamento.",
      nullable: true,
    },
    dataFim: {
      type: "null",
      description: "Fim da vigência da preferência de agrupamento.",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
  },
  required: ["diaSemanaIso", "aulasSeguidas", "dataInicio", "dataFim", "intervaloDeTempo", "diario"],
} as const;

export const $DiarioPreferenciaAgrupamentoInputUpdateView = {
  type: "object",
  properties: {
    diaSemanaIso: {
      type: "integer",
      minimum: 0,
      maximum: 255,
      description: "Dia da semana.",
      nullable: true,
    },
    aulasSeguidas: {
      type: "integer",
      minimum: 0,
      maximum: 255,
      description: "Quantidade de aulas seguidas.",
      nullable: true,
    },
    dataInicio: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Início da vigência da preferência de agrupamento.",
      nullable: true,
    },
    dataFim: {
      type: "null",
      description: "Fim da vigência da preferência de agrupamento.",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioFindOneInputView.json",
      description: "Dados de entrada para encontrar um diário por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioFindOneInputView",
        },
      ],
    },
  },
  required: ["intervaloDeTempo", "diario"],
} as const;

export const $HorarioGeradoInputCreateView = {
  type: "object",
  properties: {
    status: {
      type: "null",
      description: "Status do horário gerado.",
      nullable: true,
    },
    tipo: {
      type: "null",
      description: "Tipo do horário gerado.",
      nullable: true,
    },
    dataGeracao: {
      type: "null",
      description: "Data em que o horário foi gerado.",
      nullable: true,
    },
    vigenciaInicio: {
      type: "null",
      description: "Início da vigência do horário gerado.",
      nullable: true,
    },
    vigenciaFim: {
      type: "null",
      description: "Fim da vigência do horário gerado.",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["status", "tipo", "dataGeracao", "vigenciaInicio", "vigenciaFim", "calendario"],
} as const;

export const $HorarioGeradoInputUpdateView = {
  type: "object",
  properties: {
    status: {
      type: "null",
      description: "Status do horário gerado.",
      nullable: true,
    },
    tipo: {
      type: "null",
      description: "Tipo do horário gerado.",
      nullable: true,
    },
    dataGeracao: {
      type: "null",
      description: "Data em que o horário foi gerado.",
      nullable: true,
    },
    vigenciaInicio: {
      type: "null",
      description: "Início da vigência do horário gerado.",
      nullable: true,
    },
    vigenciaFim: {
      type: "null",
      description: "Fim da vigência do horário gerado.",
      nullable: true,
    },
    calendario: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/CalendarioLetivoFindOneInputView.json",
      description: "Dados de entrada para encontrar um calendário letivo por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "CalendarioLetivoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/CalendarioLetivoFindOneInputView",
        },
      ],
    },
  },
  required: ["calendario"],
} as const;

export const $DiarioProfessorFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "DiarioProfessor",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $HorarioGeradoFindOneInputView = {
  type: "object",
  properties: {
    id: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/uuid.json",
      format: "uuid",
      description: "Identificador do registro (uuid).",
      "x-unispec-constraint-entity-exists": "HorarioGerado",
      nullable: true,
    },
  },
  required: ["id"],
} as const;

export const $HorarioGeradoAulaInputCreateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Data da aula gerada.",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diarioProfessor: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioProfessorFindOneInputView.json",
      description: "Dados de entrada para encontrar um DiarioProfessor por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioProfessorFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioProfessorFindOneInputView",
        },
      ],
    },
    horarioGerado: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/HorarioGeradoFindOneInputView.json",
      description: "Dados de entrada para encontrar um HorarioGerado por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "HorarioGeradoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/HorarioGeradoFindOneInputView",
        },
      ],
    },
  },
  required: ["data", "intervaloDeTempo", "diarioProfessor", "horarioGerado"],
} as const;

export const $HorarioGeradoAulaInputUpdateView = {
  type: "object",
  properties: {
    data: {
      type: "string",
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/date.json",
      format: "date",
      description: "Data da aula gerada.",
      nullable: true,
    },
    intervaloDeTempo: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/IntervaloDeTempoInputView.json",
      description: "Dados de entrada para um Intervalo de Tempo.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "IntervaloDeTempoInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/IntervaloDeTempoInputView",
        },
      ],
    },
    diarioProfessor: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/DiarioProfessorFindOneInputView.json",
      description: "Dados de entrada para encontrar um DiarioProfessor por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "DiarioProfessorFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/DiarioProfessorFindOneInputView",
        },
      ],
    },
    horarioGerado: {
      $schema: "https://json-schema.org/draft/2020-12/schema",
      $id: "ladesa://schemas/v3/generics/HorarioGeradoFindOneInputView.json",
      description: "Dados de entrada para encontrar um HorarioGerado por ID.",
      "x-unispec-kind": "entity",
      "x-unispec-entity-id": "HorarioGeradoFindOneInputView",
      nullable: true,
      allOf: [
        {
          $ref: "#/components/schemas/HorarioGeradoFindOneInputView",
        },
      ],
    },
  },
  required: ["intervaloDeTempo", "diarioProfessor", "horarioGerado"],
} as const;
