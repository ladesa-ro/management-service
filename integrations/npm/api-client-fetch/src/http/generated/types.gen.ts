// This file is auto-generated by @hey-api/openapi-ts

export type PaginatedResultMetaView = {
  /**
   * Quantidade de itens por página.
   */
  itemsPerPage: number;
  /**
   * Total de itens.
   */
  totalItems: number;
  /**
   * Página atual.
   */
  currentPage: number;
  /**
   * Quantidade total de páginas.
   */
  totalPages: number;
  /**
   * Termo textual da busca.
   */
  search: string;
  /**
   * Ordenação.
   */
  sortBy: Array<{
    /**
     * Propriedade ordenada.
     */
    property: string;
    /**
     * Modo de ordenação.
     */
    mode: string;
  }>;
  /**
   * Filtros.
   */
  filter: Array<{
    /**
     * Propriedade filtrada.
     */
    property: string;
    /**
     * Restrições de filtragem.
     */
    restrictions: Array<string>;
  }>;
};

export type EstadoFindOneResultView = {
  /**
   * Identificador do registro (numérico).
   */
  id: number;
  /**
   * Nome oficial do estado.
   */
  nome: string;
  /**
   * Sigla do estado.
   */
  sigla: string;
};

export type PaginatedResultLinksView = {
  first: string | null;
  previous: string | null;
  current: string | null;
  next: string | null;
  last: string | null;
};

export type EstadoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um estado.
   */
  data: Array<EstadoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CidadeFindOneResultView = {
  /**
   * Identificador do registro (numérico).
   */
  id: number;
  /**
   * Nome oficial da cidade.
   */
  nome: string;
  /**
   * Visão FindOne de um estado.
   */
  estado: EstadoFindOneResultView;
};

export type CidadeListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma cidade.
   */
  data: Array<CidadeFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type ArquivoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do arquivo.
   */
  name: string | null;
  /**
   * Formato do arquivo.
   */
  mimeType: string | null;
  /**
   * Tamanho do arquivo (em bytes).
   */
  sizeBytes: number | null;
  /**
   * Estratégia de armazenamento do conteúdo.
   */
  storageType: string;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type ImagemArquivoFindOneFromImagemResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Largura da imagem.
   */
  largura: number;
  /**
   * Altura da imagem.
   */
  altura: number;
  /**
   * Formato da imagem.
   */
  formato: string;
  /**
   * Mime-type da imagem.
   */
  mimeType: string;
  /**
   * Dados de saída para encontrar um arquivo por id.
   */
  arquivo: ArquivoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type ImagemFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Descrição da imagem.
   */
  descricao: string | null;
  /**
   * Visão FindOneFromImagem de uma versão de imagem.
   */
  versoes: Array<ImagemArquivoFindOneFromImagemResultView>;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type UsuarioFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do usuário.
   */
  nome: string | null;
  /**
   * Matrícula SIAPE do usuário.
   */
  matriculaSiape: string | null;
  /**
   * E-mail do usuário.
   */
  email: string | null;
  /**
   * Diz que o usuário tem poderes de administrador.
   */
  isSuperUser: boolean;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemPerfil: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type EnderecoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Código postal (CEP).
   */
  cep: string;
  /**
   * Logradouro.
   */
  logradouro: string;
  /**
   * Número.
   */
  numero: number;
  /**
   * Bairro.
   */
  bairro: string;
  /**
   * Complemento.
   */
  complemento: string | null;
  /**
   * Ponto de referência.
   */
  pontoReferencia: string | null;
  /**
   * Visão FindOne de uma cidade.
   */
  cidade: CidadeFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type CampusFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome fantasia do campus.
   */
  nomeFantasia: string;
  /**
   * Razão social do campus.
   */
  razaoSocial: string;
  /**
   * Apelido do campus.
   */
  apelido: string;
  /**
   * CNPJ do campus.
   */
  cnpj: string;
  /**
   * Visão FindOne de um endereço.
   */
  endereco: EnderecoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type PerfilFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Indica se o vínculo está ativo.
   */
  ativo: boolean;
  /**
   * Cargo do usuário no vínculo.
   */
  cargo: string;
  /**
   * Visão FindOne de um campus.
   */
  campus: CampusFindOneResultView;
  /**
   * Visão FindOne de um Usuário.
   */
  usuario: UsuarioFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type AuthWhoAmIInputView = {
  /**
   * Usuário autenticado.
   */
  usuario: UsuarioFindOneResultView | null;
  /**
   * Visão FindOne de um Vínculo.
   */
  perfisAtivos: Array<PerfilFindOneResultView>;
};

export type AuthLoginInputView = {
  /**
   * Matrícula SIAPE.
   */
  matriculaSiape: string;
  /**
   * Senha do usuário.
   */
  senha: string;
};

export type AuthSessionCredentialsView = {
  /**
   * Token de acesso.
   */
  access_token: string | null;
  /**
   * Tipo do token.
   */
  token_type: string | null;
  /**
   * Token de identificação.
   */
  id_token: string | null;
  /**
   * Token de refresh.
   */
  refresh_token: string | null;
  /**
   * Tempo de expiração do token.
   */
  expires_in: number | null;
  /**
   * Tempo de expiração do token.
   */
  expires_at: number | null;
  /**
   * Estado da sessão.
   */
  session_state: string | null;
  /**
   * Escopo da autenticação.
   */
  scope: string | null;
};

export type AuthRefreshInputView = {
  /**
   * Token de refresh.
   */
  refreshToken: string;
};

export type AuthSetInitialPasswordInputView = {
  /**
   * Matrícula SIAPE.
   */
  matriculaSiape: string;
  /**
   * Nova senha.
   */
  senha: string;
};

export type UsuarioListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um Usuário.
   */
  data: Array<UsuarioFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type UsuarioInputCreateView = {
  /**
   * Nome do usuário.
   */
  nome: string | null;
  /**
   * Matrícula SIAPE do usuário.
   */
  matriculaSiape: string | null;
  /**
   * E-mail do usuário.
   */
  email: string | null;
};

export type UsuarioInputUpdateView = {
  /**
   * Nome do usuário.
   */
  nome?: string | null;
  /**
   * Matrícula SIAPE do usuário.
   */
  matriculaSiape?: string | null;
  /**
   * E-mail do usuário.
   */
  email?: string | null;
};

export type PerfilListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um Vínculo.
   */
  data: Array<PerfilFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CampusFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type PerfilInputUpdateView = {
  /**
   * Cargos do usuário no vínculo.
   */
  cargos: Array<string>;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar um Usuário por ID.
   */
  usuario: UsuarioFindOneInputView;
};

export type CampusListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um campus.
   */
  data: Array<CampusFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CidadeFindOneInputView = {
  /**
   * Identificador do registro (numérico).
   */
  id: number;
};

export type EnderecoInputView = {
  /**
   * Código postal (CEP).
   */
  cep: string;
  /**
   * Logradouro.
   */
  logradouro: string;
  /**
   * Número.
   */
  numero: number;
  /**
   * Bairro.
   */
  bairro: string;
  /**
   * Complemento.
   */
  complemento: string | null;
  /**
   * Ponto de referência.
   */
  pontoReferencia: string | null;
  /**
   * Dados de entrada para encontrar uma cidade por id.
   */
  cidade: CidadeFindOneInputView;
};

export type CampusInputCreateView = {
  /**
   * Nome fantasia do campus.
   */
  nomeFantasia: string;
  /**
   * Razão social do campus.
   */
  razaoSocial: string;
  /**
   * Apelido do campus.
   */
  apelido: string;
  /**
   * CNPJ do campus.
   */
  cnpj: string;
  /**
   * Dados de entrada para um endereco.
   */
  endereco: EnderecoInputView;
};

export type CampusInputUpdateView = {
  /**
   * Nome fantasia do campus.
   */
  nomeFantasia?: string;
  /**
   * Razão social do campus.
   */
  razaoSocial?: string;
  /**
   * Apelido do campus.
   */
  apelido?: string;
  /**
   * CNPJ do campus.
   */
  cnpj?: string;
  /**
   * Dados de entrada para um endereco.
   */
  endereco?: EnderecoInputView;
};

export type BlocoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do Bloco.
   */
  nome: string;
  /**
   * Código do Bloco.
   */
  codigo: string;
  /**
   * Visão FindOne de um campus.
   */
  campus: CampusFindOneResultView;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type BlocoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um bloco.
   */
  data: Array<BlocoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type BlocoInputCreateView = {
  /**
   * Nome do Bloco.
   */
  nome: string;
  /**
   * Código do Bloco.
   */
  codigo: string;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus: CampusFindOneInputView;
};

export type BlocoInputUpdateView = {
  /**
   * Nome do Bloco.
   */
  nome?: string;
  /**
   * Código do Bloco.
   */
  codigo?: string;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus?: CampusFindOneInputView;
};

export type AmbienteFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do ambiente/sala.
   */
  nome: string;
  /**
   * Descrição do ambiente/sala.
   */
  descricao: string | null;
  /**
   * Código do ambiente/sala.
   */
  codigo: string;
  /**
   * Capacidade do ambiente/sala.
   */
  capacidade: number | null;
  /**
   * Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
   */
  tipo: string | null;
  /**
   * Visão FindOne de um bloco.
   */
  bloco: BlocoFindOneResultView;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type AmbienteListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um ambiente.
   */
  data: Array<AmbienteFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type BlocoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AmbienteInputCreateView = {
  /**
   * Nome do ambiente/sala.
   */
  nome: string;
  /**
   * Descrição do ambiente/sala.
   */
  descricao: string | null;
  /**
   * Código do ambiente/sala.
   */
  codigo: string;
  /**
   * Capacidade do ambiente/sala.
   */
  capacidade: number | null;
  /**
   * Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
   */
  tipo: string | null;
  /**
   * Dados de entrada para encontrar um bloco por id.
   */
  bloco: BlocoFindOneInputView;
};

export type AmbienteInputUpdateView = {
  /**
   * Nome do ambiente/sala.
   */
  nome?: string;
  /**
   * Descrição do ambiente/sala.
   */
  descricao?: string | null;
  /**
   * Código do ambiente/sala.
   */
  codigo?: string;
  /**
   * Capacidade do ambiente/sala.
   */
  capacidade?: number | null;
  /**
   * Tipo do ambiente/sala. Ex.: sala aula, auditório, laboratório de química.
   */
  tipo?: string | null;
  /**
   * Dados de entrada para encontrar um bloco por id.
   */
  bloco?: BlocoFindOneInputView;
};

export type ReservaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Situação da reserva.
   */
  situacao: string;
  /**
   * Motivo da reserva.
   */
  motivo: string | null;
  /**
   * Tipo da reserva.
   */
  tipo: string | null;
  /**
   * Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
   */
  rrule: string;
  /**
   * Visão FindOne de um Usuário.
   */
  usuario: UsuarioFindOneResultView;
  /**
   * Visão FindOne de um ambiente.
   */
  ambiente: AmbienteFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type ReservaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Reserva.
   */
  data: Array<ReservaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type AmbienteFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ReservaInputCreateView = {
  /**
   * Situação da reserva.
   */
  situacao: string;
  /**
   * Motivo da reserva.
   */
  motivo: string | null;
  /**
   * Tipo da reserva.
   */
  tipo: string | null;
  /**
   * Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
   */
  rrule: string;
  /**
   * Dados de entrada para encontrar um Usuário por ID.
   */
  usuario: UsuarioFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambiente: AmbienteFindOneInputView;
};

export type ReservaInputUpdateView = {
  /**
   * Situação da reserva.
   */
  situacao?: string;
  /**
   * Motivo da reserva.
   */
  motivo?: string | null;
  /**
   * Tipo da reserva.
   */
  tipo?: string | null;
  /**
   * Regra RRule para a recorrência da reserva. Segue a RFC 5545 do iCalendar.
   */
  rrule?: string;
  /**
   * Dados de entrada para encontrar um Usuário por ID.
   */
  usuario?: UsuarioFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambiente?: AmbienteFindOneInputView;
};

export type NivelFormacaoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Apelido do nível de formação.
   */
  slug: string;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type NivelFormacaoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um nível de formação.
   */
  data: Array<NivelFormacaoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type NivelFormacaoInputCreateView = {
  /**
   * Apelido do nível de formação.
   */
  slug: string;
};

export type NivelFormacaoInputUpdateView = {
  /**
   * Apelido do nível de formação.
   */
  slug?: string;
};

export type ModalidadeFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Apelido da modalidade.
   */
  slug: string;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type ModalidadeListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma modalidade.
   */
  data: Array<ModalidadeFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type ModalidadeInputCreateView = {
  /**
   * Apelido da modalidade.
   */
  slug: string;
};

export type ModalidadeInputUpdateView = {
  /**
   * Apelido da modalidade.
   */
  slug?: string;
};

export type OfertaFormacaoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome da oferta de formação.
   */
  nome: string;
  /**
   * Apelido da oferta de formação.
   */
  slug: string;
  /**
   * Modalidade da oferta de formação.
   */
  modalidade: ModalidadeFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type OfertaFormacaoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  data: Array<OfertaFormacaoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type ModalidadeFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoInputCreateView = {
  /**
   * Nome da oferta de formação.
   */
  nome: string;
  /**
   * Apelido da oferta de formação.
   */
  slug: string;
  /**
   * Modalidade da oferta de formação.
   */
  modalidade: ModalidadeFindOneInputView;
};

export type OfertaFormacaoInputUpdateView = {
  /**
   * Nome da oferta de formação.
   */
  nome?: string;
  /**
   * Apelido da oferta de formação.
   */
  slug?: string;
  /**
   * Modalidade da oferta de formação.
   */
  modalidade?: ModalidadeFindOneInputView;
};

export type OfertaFormacaoNivelFormacaoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  ofertaFormacao: OfertaFormacaoFindOneResultView;
  /**
   * Visão FindOne de um nível de formação.
   */
  nivelFormacao: NivelFormacaoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type OfertaFormacaoNivelFormacaoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  data: Array<OfertaFormacaoNivelFormacaoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type OfertaFormacaoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type NivelFormacaoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoNivelFormacaoInputCreateView = {
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao: OfertaFormacaoFindOneInputView;
  /**
   * Dados de entrada para encontrar um nível de formação por ID.
   */
  nivelFormacao: NivelFormacaoFindOneInputView;
};

export type OfertaFormacaoNivelFormacaoInputUpdateView = {
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao?: OfertaFormacaoFindOneInputView;
  /**
   * Dados de entrada para encontrar um nível de formação por ID.
   */
  nivelFormacao?: NivelFormacaoFindOneInputView;
};

export type CursoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do curso.
   */
  nome: string;
  /**
   * Nome abreviado do curso.
   */
  nomeAbreviado: string;
  /**
   * Visão FindOne de um campus.
   */
  campus: CampusFindOneResultView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  ofertaFormacao: OfertaFormacaoFindOneResultView;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type CursoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um Curso.
   */
  data: Array<CursoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CursoInputCreateView = {
  /**
   * Nome do curso.
   */
  nome: string;
  /**
   * Nome abreviado do curso.
   */
  nomeAbreviado: string;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao: OfertaFormacaoFindOneInputView;
};

export type CursoInputUpdateView = {
  /**
   * Nome do curso.
   */
  nome?: string;
  /**
   * Nome abreviado do curso.
   */
  nomeAbreviado?: string;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus?: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao?: OfertaFormacaoFindOneInputView;
};

export type DisciplinaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome da disciplina.
   */
  nome: string;
  /**
   * Nome abreviado da disciplina.
   */
  nomeAbreviado: string;
  /**
   * Carga horária da disciplina.
   */
  cargaHoraria: number;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DisciplinaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Disciplina.
   */
  data: Array<DisciplinaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DisciplinaInputCreateView = {
  /**
   * Nome da disciplina.
   */
  nome: string;
  /**
   * Nome abreviado da disciplina.
   */
  nomeAbreviado: string;
  /**
   * Carga horária da disciplina.
   */
  cargaHoraria: number;
};

export type DisciplinaInputUpdateView = {
  /**
   * Nome da disciplina.
   */
  nome?: string;
  /**
   * Nome abreviado da disciplina.
   */
  nomeAbreviado?: string;
  /**
   * Carga horária da disciplina.
   */
  cargaHoraria?: number;
};

export type CalendarioLetivoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do calendário letivo.
   */
  nome: string;
  /**
   * Ano do calendário letivo.
   */
  ano: number;
  /**
   * Visão FindOne de um campus.
   */
  campus: CampusFindOneResultView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  ofertaFormacao: OfertaFormacaoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type CalendarioLetivoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um calendário letivo.
   */
  data: Array<CalendarioLetivoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CalendarioLetivoInputCreateView = {
  /**
   * Nome do calendário letivo.
   */
  nome: string;
  /**
   * Ano do calendário letivo.
   */
  ano: number;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao: OfertaFormacaoFindOneInputView;
};

export type CalendarioLetivoInputUpdateView = {
  /**
   * Nome do calendário letivo.
   */
  nome?: string;
  /**
   * Ano do calendário letivo.
   */
  ano?: number;
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus?: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao?: OfertaFormacaoFindOneInputView;
};

export type GradeHorarioOfertaFormacaoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Visão FindOne de um campus.
   */
  campus: CampusFindOneResultView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  ofertaFormacao: OfertaFormacaoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type GradeHorarioOfertaFormacaoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  data: Array<GradeHorarioOfertaFormacaoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type GradeHorarioOfertaFormacaoInputCreateView = {
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao: OfertaFormacaoFindOneInputView;
};

export type GradeHorarioOfertaFormacaoInputUpdateView = {
  /**
   * Dados de entrada para encontrar um campus por id.
   */
  campus?: CampusFindOneInputView;
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  ofertaFormacao?: OfertaFormacaoFindOneInputView;
};

export type IntervaloDeTempoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Horário que o intervalo de tempo inicia.
   */
  periodoInicio: string;
  /**
   * Horário que o intervalo de tempo termina.
   */
  periodoFim: string;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  gradeHorarioOfertaFormacao: GradeHorarioOfertaFormacaoFindOneResultView;
  /**
   * Visão FindOne de um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma oferta de formação.
   */
  data: Array<GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type GradeHorarioOfertaFormacaoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type IntervaloDeTempoInputView = {
  /**
   * Horário que o intervalo de tempo inicia.
   */
  periodoInicio: string;
  /**
   * Horário que o intervalo de tempo termina.
   */
  periodoFim: string;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView = {
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  gradeHorarioOfertaFormacao: GradeHorarioOfertaFormacaoFindOneInputView;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoInputView;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView = {
  /**
   * Dados de entrada para encontrar uma oferta de formação por ID.
   */
  gradeHorarioOfertaFormacao?: GradeHorarioOfertaFormacaoFindOneInputView;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo?: IntervaloDeTempoInputView;
};

export type EventoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Nome do evento.
   */
  nome: string | null;
  /**
   * Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
   */
  rrule: string;
  /**
   * Cor da Evento.
   */
  cor: string | null;
  /**
   * Visão FindOne de um calendário letivo.
   */
  calendario: CalendarioLetivoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type EventoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um Evento.
   */
  data: Array<EventoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CalendarioLetivoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type EventoInputCreateView = {
  nome: string | null;
  rrule: string;
  cor: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario: CalendarioLetivoFindOneInputView;
};

export type EventoInputUpdateView = {
  nome?: string | null;
  rrule?: string;
  cor?: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario?: CalendarioLetivoFindOneInputView;
};

export type DiaCalendarioFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Data.
   */
  data: string;
  /**
   * Define que o dia é letivo.
   */
  diaLetivo: boolean;
  /**
   * Define que o dia é feriado.
   */
  feriado: boolean;
  /**
   * Visão FindOne de um calendário letivo.
   */
  calendario: CalendarioLetivoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DiaCalendarioListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um DiaCalendario.
   */
  data: Array<DiaCalendarioFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DiaCalendarioInputCreateView = {
  /**
   * Date ISO 8601.
   */
  data: string;
  feriado: boolean;
  diaLetivo: boolean;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario: CalendarioLetivoFindOneInputView | null;
};

export type DiaCalendarioInputUpdateView = {
  /**
   * Date ISO 8601.
   */
  data?: string;
  feriado?: boolean;
  diaLetivo?: boolean;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario?: CalendarioLetivoFindOneInputView | null;
};

export type EtapaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Número da etapa.
   */
  numero: number | null;
  /**
   * Data de início.
   */
  dataInicio: string;
  /**
   * Data de término.
   */
  dataTermino: string;
  /**
   * Cor da etapa.
   */
  cor: string | null;
  /**
   * Visão FindOne de um calendário letivo.
   */
  calendario: CalendarioLetivoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type EtapaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Etapa.
   */
  data: Array<EtapaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type EtapaInputCreateView = {
  numero: number | null;
  /**
   * Date ISO 8601.
   */
  dataInicio: string;
  /**
   * Date ISO 8601.
   */
  dataTermino: string;
  cor: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario: CalendarioLetivoFindOneInputView;
};

export type EtapaInputUpdateView = {
  numero?: number | null;
  /**
   * Date ISO 8601.
   */
  dataInicio?: string;
  /**
   * Date ISO 8601.
   */
  dataTermino?: string;
  cor?: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario?: CalendarioLetivoFindOneInputView;
};

export type TurmaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Período da Turma.
   */
  periodo: string;
  /**
   * Visão FindOne de um Curso.
   */
  curso: CursoFindOneResultView;
  /**
   * Visão FindOne de um ambiente.
   */
  ambientePadraoAula: AmbienteFindOneResultView | null;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type TurmaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Turma.
   */
  data: Array<TurmaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type CursoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaInputCreateView = {
  /**
   * Período da Turma.
   */
  periodo: string;
  /**
   * Dados de entrada para encontrar um Curso por ID.
   */
  curso: CursoFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambientePadraoAula: AmbienteFindOneInputView | null;
};

export type TurmaInputUpdateView = {
  /**
   * Período da Turma.
   */
  periodo?: string;
  /**
   * Dados de entrada para encontrar um Curso por ID.
   */
  curso?: CursoFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambientePadraoAula?: AmbienteFindOneInputView | null;
};

export type DiarioFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Situação do diário.
   */
  ativo: boolean;
  /**
   * Visão FindOne de um calendário letivo.
   */
  calendarioLetivo: CalendarioLetivoFindOneResultView;
  /**
   * Visão FindOne de uma Turma.
   */
  turma: TurmaFindOneResultView;
  /**
   * Visão FindOne de uma Disciplina.
   */
  disciplina: DisciplinaFindOneResultView;
  /**
   * Visão FindOne de um ambiente.
   */
  ambientePadrao: AmbienteFindOneResultView | null;
  /**
   * Visão FindOne de uma imagem.
   */
  imagemCapa: ImagemFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DiarioListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um diário.
   */
  data: Array<DiarioFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type TurmaFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisciplinaFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioInputCreateView = {
  ativo: boolean;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendarioLetivo: CalendarioLetivoFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Turma por ID.
   */
  turma: TurmaFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Disciplina por ID.
   */
  disciplina: DisciplinaFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambientePadrao: AmbienteFindOneInputView | null;
};

export type DiarioInputUpdateView = {
  ativo?: boolean;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendarioLetivo?: CalendarioLetivoFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Turma por ID.
   */
  turma?: TurmaFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Disciplina por ID.
   */
  disciplina?: DisciplinaFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambientePadrao?: AmbienteFindOneInputView | null;
};

export type DiarioProfessorFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Situação do vínculo.
   */
  situacao: boolean;
  /**
   * Visão FindOne de um Vínculo.
   */
  perfil: PerfilFindOneResultView;
  /**
   * Visão FindOne de um diário.
   */
  diario: DiarioFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DiarioProfessorListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um DiarioProfessor.
   */
  data: Array<DiarioProfessorFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type PerfilFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioProfessorInputCreateView = {
  situacao: boolean;
  /**
   * Dados de entrada para encontrar um Vínculo por ID.
   */
  perfil: PerfilFindOneInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario: DiarioFindOneInputView;
};

export type DiarioProfessorInputUpdateView = {
  situacao?: boolean;
  /**
   * Dados de entrada para encontrar um Vínculo por ID.
   */
  perfil?: PerfilFindOneInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario?: DiarioFindOneInputView;
};

export type AulaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Data da aula.
   */
  data: string;
  /**
   * Modalidade da aula.
   */
  modalidade: string | null;
  /**
   * Visão FindOne de um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoFindOneResultView;
  /**
   * Visão FindOne de um diário.
   */
  diario: DiarioFindOneResultView;
  /**
   * Visão FindOne de um ambiente.
   */
  ambiente: AmbienteFindOneResultView | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type AulaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Aula.
   */
  data: Array<AulaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type AulaInputCreateView = {
  /**
   * Date ISO 8601.
   */
  data: string;
  modalidade: string | null;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario: DiarioFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambiente: AmbienteFindOneInputView | null;
};

export type AulaInputUpdateView = {
  /**
   * Date ISO 8601.
   */
  data?: string;
  modalidade?: string | null;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo?: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario?: DiarioFindOneInputView;
  /**
   * Dados de entrada para encontrar um ambiente por id.
   */
  ambiente?: AmbienteFindOneInputView | null;
};

export type DisponibilidadeFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Data de início.
   */
  dataInicio: string;
  /**
   * Data de término.
   */
  dataFim: string | null;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DisponibilidadeListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma Disponibilidade.
   */
  data: Array<DisponibilidadeFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DisponibilidadeInputCreateView = {
  /**
   * Date ISO 8601.
   */
  dataInicio: string;
  /**
   * Date ISO 8601.
   */
  dataFim: string | null;
};

export type DisponibilidadeInputUpdateView = {
  /**
   * Date ISO 8601.
   */
  dataInicio?: string;
  /**
   * Date ISO 8601.
   */
  dataFim?: string | null;
};

export type DisponibilidadeDiaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
   */
  rrule: string;
  /**
   * Visão FindOne de um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoFindOneResultView;
  /**
   * Visão FindOne de uma Disponibilidade.
   */
  disponibilidade: DisponibilidadeFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DisponibilidadeDiaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um DisponibilidadeDia.
   */
  data: Array<DisponibilidadeDiaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DisponibilidadeFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisponibilidadeDiaInputCreateView = {
  /**
   * Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
   */
  rrule: string;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade: DisponibilidadeFindOneInputView;
};

export type DisponibilidadeDiaInputUpdateView = {
  /**
   * Regra RRule para a recorrência do evento. Segue a RFC 5545 do iCalendar.
   */
  rrule?: string;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo?: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade?: DisponibilidadeFindOneInputView;
};

export type TurmaDisponibilidadeFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Visão FindOne de uma Disponibilidade.
   */
  disponibilidade: DisponibilidadeFindOneResultView;
  /**
   * Visão FindOne de uma Turma.
   */
  turma: TurmaFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type TurmaDisponibilidadeListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma TurmaDisponibilidade.
   */
  data: Array<TurmaDisponibilidadeFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type TurmaDisponibilidadeInputCreateView = {
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade: DisponibilidadeFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Turma por ID.
   */
  turma: TurmaFindOneInputView;
};

export type TurmaDisponibilidadeInputUpdateView = {
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade?: DisponibilidadeFindOneInputView;
  /**
   * Dados de entrada para encontrar uma Turma por ID.
   */
  turma?: TurmaFindOneInputView;
};

export type ProfessorDisponibilidadeFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Visão FindOne de uma Disponibilidade.
   */
  disponibilidade: DisponibilidadeFindOneResultView;
  /**
   * Visão FindOne de um Vínculo.
   */
  perfil: PerfilFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type ProfessorDisponibilidadeListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de uma ProfessorDisponibilidade.
   */
  data: Array<ProfessorDisponibilidadeFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type ProfessorDisponibilidadeInputCreateView = {
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade: DisponibilidadeFindOneInputView;
  /**
   * Dados de entrada para encontrar um Vínculo por ID.
   */
  perfil: PerfilFindOneInputView;
};

export type ProfessorDisponibilidadeInputUpdateView = {
  /**
   * Dados de entrada para encontrar uma Disponibilidade por ID.
   */
  disponibilidade?: DisponibilidadeFindOneInputView;
  /**
   * Dados de entrada para encontrar um Vínculo por ID.
   */
  perfil?: PerfilFindOneInputView;
};

export type DiarioPreferenciaAgrupamentoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Início da vigência da preferência de agrupamento.
   */
  dataInicio: string;
  /**
   * Fim da vigência da preferência de agrupamento.
   */
  dataFim: string | null;
  /**
   * Dia da semana.
   */
  diaSemanaIso: number;
  /**
   * Quantidade de aulas seguidas.
   */
  aulasSeguidas: number;
  /**
   * Visão FindOne de um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoFindOneResultView;
  /**
   * Visão FindOne de um diário.
   */
  diario: DiarioFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type DiarioPreferenciaAgrupamentoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um DiarioPreferenciaAgrupamento.
   */
  data: Array<DiarioPreferenciaAgrupamentoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DiarioPreferenciaAgrupamentoInputCreateView = {
  /**
   * Dia da semana.
   */
  diaSemanaIso: number;
  /**
   * Quantidade de aulas seguidas.
   */
  aulasSeguidas: number;
  /**
   * Início da vigência da preferência de agrupamento.
   */
  dataInicio: string;
  /**
   * Fim da vigência da preferência de agrupamento.
   */
  dataFim: string | null;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario: DiarioFindOneInputView;
};

export type DiarioPreferenciaAgrupamentoInputUpdateView = {
  /**
   * Dia da semana.
   */
  diaSemanaIso?: number;
  /**
   * Quantidade de aulas seguidas.
   */
  aulasSeguidas?: number;
  /**
   * Início da vigência da preferência de agrupamento.
   */
  dataInicio?: string;
  /**
   * Fim da vigência da preferência de agrupamento.
   */
  dataFim?: string | null;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo?: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um diário por ID.
   */
  diario?: DiarioFindOneInputView;
};

export type HorarioGeradoFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Status do horário gerado.
   */
  status: string | null;
  /**
   * Tipo do horário gerado.
   */
  tipo: string | null;
  /**
   * Data em que o horário foi gerado.
   */
  dataGeracao: string | null;
  /**
   * Início da vigência do horário gerado.
   */
  vigenciaInicio: string | null;
  /**
   * Fim da vigência do horário gerado.
   */
  vigenciaFim: string | null;
  /**
   * Visão FindOne de um calendário letivo.
   */
  calendario: CalendarioLetivoFindOneResultView;
  /**
   * Data e hora da criação do registro.
   */
  dateCreated: string;
  /**
   * Data e hora da alteração do registro.
   */
  dateUpdated: string;
  /**
   * Data e hora da exclusão do registro.
   */
  dateDeleted: string | null;
};

export type HorarioGeradoListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um HorarioGerado.
   */
  data: Array<HorarioGeradoFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type HorarioGeradoInputCreateView = {
  /**
   * Status do horário gerado.
   */
  status: string | null;
  /**
   * Tipo do horário gerado.
   */
  tipo: string | null;
  /**
   * Data em que o horário foi gerado.
   */
  dataGeracao: string | null;
  /**
   * Início da vigência do horário gerado.
   */
  vigenciaInicio: string | null;
  /**
   * Fim da vigência do horário gerado.
   */
  vigenciaFim: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario: CalendarioLetivoFindOneInputView;
};

export type HorarioGeradoInputUpdateView = {
  /**
   * Status do horário gerado.
   */
  status?: string | null;
  /**
   * Tipo do horário gerado.
   */
  tipo?: string | null;
  /**
   * Data em que o horário foi gerado.
   */
  dataGeracao?: string | null;
  /**
   * Início da vigência do horário gerado.
   */
  vigenciaInicio?: string | null;
  /**
   * Fim da vigência do horário gerado.
   */
  vigenciaFim?: string | null;
  /**
   * Dados de entrada para encontrar um calendário letivo por ID.
   */
  calendario?: CalendarioLetivoFindOneInputView;
};

export type HorarioGeradoAulaFindOneResultView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Data da aula gerada.
   */
  data: string;
  /**
   * Visão FindOne de um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoFindOneResultView;
  /**
   * Visão FindOne de um DiarioProfessor.
   */
  diarioProfessor: DiarioProfessorFindOneResultView;
  /**
   * Visão FindOne de um HorarioGerado.
   */
  horarioGerado: HorarioGeradoFindOneResultView;
};

export type HorarioGeradoAulaListResultView = {
  /**
   * Metadados da busca.
   */
  meta: PaginatedResultMetaView;
  /**
   * Visão FindOne de um HorarioGeradoAula.
   */
  data: Array<HorarioGeradoAulaFindOneResultView>;
  /**
   * Links da busca.
   */
  links: PaginatedResultLinksView;
};

export type DiarioProfessorFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoFindOneInputView = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoAulaInputCreateView = {
  /**
   * Data da aula gerada.
   */
  data: string;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um DiarioProfessor por ID.
   */
  diarioProfessor: DiarioProfessorFindOneInputView;
  /**
   * Dados de entrada para encontrar um HorarioGerado por ID.
   */
  horarioGerado: HorarioGeradoFindOneInputView;
};

export type HorarioGeradoAulaInputUpdateView = {
  /**
   * Data da aula gerada.
   */
  data?: string;
  /**
   * Dados de entrada para um Intervalo de Tempo.
   */
  intervaloDeTempo?: IntervaloDeTempoInputView;
  /**
   * Dados de entrada para encontrar um DiarioProfessor por ID.
   */
  diarioProfessor?: DiarioProfessorFindOneInputView;
  /**
   * Dados de entrada para encontrar um HorarioGerado por ID.
   */
  horarioGerado?: HorarioGeradoFindOneInputView;
};

export type AppControllerGetHelloResponse = {
  /**
   * O nome desta aplicação.
   */
  service: "@ladesa-ro/api.service";
  /**
   * Status desta aplicação.
   */
  status: "up";
  /**
   * Prefixo do serviço API.
   */
  prefix?: string | null;
  /**
   * Versão do serviço API.
   */
  version: string;
  /**
   * Horário do build da aplicação.
   */
  buildTime?: string;
  /**
   * Hash atrelado ao commit git no horário do build da aplicação.
   */
  gitCommitHash?: string | null;
};

export type ArquivoGetFileData = {
  acessoRecursoId: string;
  acessoRecursoNome: string;
  id: string;
  /**
   * Acesso via recurso: id.
   */
  idRecurso: string;
  /**
   * Acesso via recurso: nome.
   */
  nomeRecurso: string;
};

export type ArquivoGetFileResponse = Blob | File;

export type EstadoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type EstadoListResponse = EstadoListResultView;

export type EstadoFindOneByIdData = {
  /**
   * Identificador do registro (numérico).
   */
  id: number;
};

export type EstadoFindOneByIdResponse = EstadoFindOneResultView;

export type CidadeListData = {
  filterEstadoId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type CidadeListResponse = CidadeListResultView;

export type CidadeFindOneByIdData = {
  /**
   * Identificador do registro (numérico).
   */
  id: number;
};

export type CidadeFindOneByIdResponse = CidadeFindOneResultView;

export type AuthWhoAmIResponse = AuthWhoAmIInputView;

export type AuthLoginData = {
  /**
   * Dados de entrada para autenticação.
   */
  requestBody: AuthLoginInputView;
};

export type AuthLoginResponse = AuthSessionCredentialsView;

export type AuthRefreshData = {
  /**
   * Dados de entrada para refresh de autenticação.
   */
  requestBody: AuthRefreshInputView;
};

export type AuthRefreshResponse = AuthSessionCredentialsView;

export type AuthSetInitialPasswordData = {
  /**
   * Dados de entrada para definir a senha inicial.
   */
  requestBody: AuthSetInitialPasswordInputView;
};

export type AuthSetInitialPasswordResponse = boolean;

export type UsuarioListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type UsuarioListResponse = UsuarioListResultView;

export type UsuarioCreateData = {
  /**
   * Dados de entrada para a criação de um usuário.
   */
  requestBody: UsuarioInputCreateView;
};

export type UsuarioCreateResponse = UsuarioFindOneResultView;

export type UsuarioFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioFindOneByIdResponse = UsuarioFindOneResultView;

export type UsuarioUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um Usuário.
   */
  requestBody: UsuarioInputUpdateView;
};

export type UsuarioUpdateOneByIdResponse = UsuarioFindOneResultView;

export type UsuarioDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioDeleteOneByIdResponse = boolean;

export type UsuarioGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioGetImagemCapaResponse = Blob | File;

export type UsuarioSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioSetImagemCapaResponse = boolean;

export type UsuarioGetImagemPerfilData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioGetImagemPerfilResponse = Blob | File;

export type UsuarioSetImagemPerfilData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type UsuarioSetImagemPerfilResponse = boolean;

export type PerfilListData = {
  filterAtivo?: Array<string>;
  filterCampusId?: Array<string>;
  filterCargo?: Array<string>;
  filterUsuarioId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type PerfilListResponse = PerfilListResultView;

export type PerfilUpdateOneByIdData = {
  /**
   * Dados de entrada para a alteração de vínculo de um Usuário a um Campus.
   */
  requestBody: PerfilInputUpdateView;
};

export type PerfilUpdateOneByIdResponse = PerfilListResultView;

export type CampusListData = {
  filterEnderecoCidadeEstadoId?: Array<string>;
  filterEnderecoCidadeId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type CampusListResponse = CampusListResultView;

export type CampusCreateData = {
  /**
   * Dados de entrada para a criação de um campus.
   */
  requestBody: CampusInputCreateView;
};

export type CampusCreateResponse = CampusFindOneResultView;

export type CampusFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CampusFindOneByIdResponse = CampusFindOneResultView;

export type CampusUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um campus.
   */
  requestBody: CampusInputUpdateView;
};

export type CampusUpdateOneByIdResponse = CampusFindOneResultView;

export type CampusDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CampusDeleteOneByIdResponse = boolean;

export type BlocoListData = {
  filterCampusId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type BlocoListResponse = BlocoListResultView;

export type BlocoCreateData = {
  /**
   * Dados de entrada para a criação de um bloco.
   */
  requestBody: BlocoInputCreateView;
};

export type BlocoCreateResponse = BlocoFindOneResultView;

export type BlocoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type BlocoFindOneByIdResponse = BlocoFindOneResultView;

export type BlocoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um bloco.
   */
  requestBody: BlocoInputUpdateView;
};

export type BlocoUpdateOneByIdResponse = BlocoFindOneResultView;

export type BlocoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type BlocoDeleteOneByIdResponse = boolean;

export type BlocoGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type BlocoGetImagemCapaResponse = Blob | File;

export type BlocoSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type BlocoSetImagemCapaResponse = boolean;

export type AmbienteListData = {
  filterBlocoCampusId?: Array<string>;
  filterBlocoId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type AmbienteListResponse = AmbienteListResultView;

export type AmbienteCreateData = {
  /**
   * Dados de entrada para a criação de um ambiente.
   */
  requestBody: AmbienteInputCreateView;
};

export type AmbienteCreateResponse = AmbienteFindOneResultView;

export type AmbienteFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AmbienteFindOneByIdResponse = AmbienteFindOneResultView;

export type AmbienteUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um ambiente.
   */
  requestBody: AmbienteInputUpdateView;
};

export type AmbienteUpdateOneByIdResponse = AmbienteFindOneResultView;

export type AmbienteDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AmbienteDeleteOneByIdResponse = boolean;

export type AmbienteGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AmbienteGetImagemCapaResponse = Blob | File;

export type AmbienteSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AmbienteSetImagemCapaResponse = boolean;

export type ReservaListData = {
  filterDataInicio?: Array<string>;
  filterDataTermino?: Array<string>;
  intervaloDeTempoPeriodoFim?: Array<string>;
  intervaloDeTempoPeriodoInicio?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type ReservaListResponse = ReservaListResultView;

export type ReservaCreateData = {
  /**
   * Dados de entrada para a criação de uma Reserva.
   */
  requestBody: ReservaInputCreateView;
};

export type ReservaCreateResponse = ReservaFindOneResultView;

export type ReservaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ReservaFindOneByIdResponse = ReservaFindOneResultView;

export type ReservaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Reserva.
   */
  requestBody: ReservaInputUpdateView;
};

export type ReservaUpdateOneByIdResponse = ReservaFindOneResultView;

export type ReservaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ReservaDeleteOneByIdResponse = boolean;

export type NivelFormacaoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type NivelFormacaoListResponse = NivelFormacaoListResultView;

export type NivelFormacaoCreateData = {
  /**
   * Dados de entrada para a criação de um nível de formação.
   */
  requestBody: NivelFormacaoInputCreateView;
};

export type NivelFormacaoCreateResponse = NivelFormacaoFindOneResultView;

export type NivelFormacaoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type NivelFormacaoFindOneByIdResponse = NivelFormacaoFindOneResultView;

export type NivelFormacaoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um nível de formação.
   */
  requestBody: NivelFormacaoInputUpdateView;
};

export type NivelFormacaoUpdateOneByIdResponse = NivelFormacaoFindOneResultView;

export type NivelFormacaoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type NivelFormacaoDeleteOneByIdResponse = boolean;

export type ModalidadeListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type ModalidadeListResponse = ModalidadeListResultView;

export type ModalidadeCreateData = {
  /**
   * Dados de entrada para a criação de uma modalidade.
   */
  requestBody: ModalidadeInputCreateView;
};

export type ModalidadeCreateResponse = ModalidadeFindOneResultView;

export type ModalidadeFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ModalidadeFindOneByIdResponse = ModalidadeFindOneResultView;

export type ModalidadeUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma modalidade.
   */
  requestBody: ModalidadeInputUpdateView;
};

export type ModalidadeUpdateOneByIdResponse = ModalidadeFindOneResultView;

export type ModalidadeDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ModalidadeDeleteOneByIdResponse = boolean;

export type OfertaFormacaoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type OfertaFormacaoListResponse = OfertaFormacaoListResultView;

export type OfertaFormacaoCreateData = {
  /**
   * Dados de entrada para a criação de uma oferta de formação.
   */
  requestBody: OfertaFormacaoInputCreateView;
};

export type OfertaFormacaoCreateResponse = OfertaFormacaoFindOneResultView;

export type OfertaFormacaoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoFindOneByIdResponse = OfertaFormacaoFindOneResultView;

export type OfertaFormacaoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma oferta de formação.
   */
  requestBody: OfertaFormacaoInputUpdateView;
};

export type OfertaFormacaoUpdateOneByIdResponse = OfertaFormacaoFindOneResultView;

export type OfertaFormacaoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoDeleteOneByIdResponse = boolean;

export type OfertaFormacaoNivelFormacaoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type OfertaFormacaoNivelFormacaoListResponse = OfertaFormacaoNivelFormacaoListResultView;

export type OfertaFormacaoNivelFormacaoCreateData = {
  /**
   * Dados de entrada para a criação de uma oferta de formação.
   */
  requestBody: OfertaFormacaoNivelFormacaoInputCreateView;
};

export type OfertaFormacaoNivelFormacaoCreateResponse = OfertaFormacaoNivelFormacaoFindOneResultView;

export type OfertaFormacaoNivelFormacaoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoNivelFormacaoFindOneByIdResponse = OfertaFormacaoNivelFormacaoFindOneResultView;

export type OfertaFormacaoNivelFormacaoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma oferta de formação.
   */
  requestBody: OfertaFormacaoNivelFormacaoInputUpdateView;
};

export type OfertaFormacaoNivelFormacaoUpdateOneByIdResponse = OfertaFormacaoNivelFormacaoFindOneResultView;

export type OfertaFormacaoNivelFormacaoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type OfertaFormacaoNivelFormacaoDeleteOneByIdResponse = boolean;

export type CursoListData = {
  filterCampusId?: Array<string>;
  filterOfertaFormacaoId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type CursoListResponse = CursoListResultView;

export type CursoCreateData = {
  /**
   * Dados de entrada para a criação de um Curso.
   */
  requestBody: CursoInputCreateView;
};

export type CursoCreateResponse = CursoFindOneResultView;

export type CursoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CursoFindOneByIdResponse = CursoFindOneResultView;

export type CursoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um Curso.
   */
  requestBody: CursoInputUpdateView;
};

export type CursoUpdateOneByIdResponse = CursoFindOneResultView;

export type CursoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CursoDeleteOneByIdResponse = boolean;

export type CursoGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CursoGetImagemCapaResponse = Blob | File;

export type CursoSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CursoSetImagemCapaResponse = boolean;

export type DisciplinaListData = {
  filterDiariosId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DisciplinaListResponse = DisciplinaListResultView;

export type DisciplinaCreateData = {
  /**
   * Dados de entrada para a criação de uma Disciplina.
   */
  requestBody: DisciplinaInputCreateView;
};

export type DisciplinaCreateResponse = DisciplinaFindOneResultView;

export type DisciplinaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisciplinaFindOneByIdResponse = DisciplinaFindOneResultView;

export type DisciplinaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Disciplina.
   */
  requestBody: DisciplinaInputUpdateView;
};

export type DisciplinaUpdateOneByIdResponse = DisciplinaFindOneResultView;

export type DisciplinaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisciplinaDeleteOneByIdResponse = boolean;

export type DisciplinaGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisciplinaGetImagemCapaResponse = Blob | File;

export type DisciplinaSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisciplinaSetImagemCapaResponse = boolean;

export type CalendarioLetivoListData = {
  filterCampusId?: Array<string>;
  filterOfertaFormacaoId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type CalendarioLetivoListResponse = CalendarioLetivoListResultView;

export type CalendarioLetivoCreateData = {
  /**
   * Dados de entrada para a criação de um calendário letivo.
   */
  requestBody: CalendarioLetivoInputCreateView;
};

export type CalendarioLetivoCreateResponse = CalendarioLetivoFindOneResultView;

export type CalendarioLetivoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CalendarioLetivoFindOneByIdResponse = CalendarioLetivoFindOneResultView;

export type CalendarioLetivoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um calendário letivo.
   */
  requestBody: CalendarioLetivoInputUpdateView;
};

export type CalendarioLetivoUpdateOneByIdResponse = CalendarioLetivoFindOneResultView;

export type CalendarioLetivoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type CalendarioLetivoDeleteOneByIdResponse = boolean;

export type GradeHorarioOfertaFormacaoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type GradeHorarioOfertaFormacaoListResponse = GradeHorarioOfertaFormacaoListResultView;

export type GradeHorarioOfertaFormacaoCreateData = {
  /**
   * Dados de entrada para a criação de uma oferta de formação.
   */
  requestBody: GradeHorarioOfertaFormacaoInputCreateView;
};

export type GradeHorarioOfertaFormacaoCreateResponse = GradeHorarioOfertaFormacaoFindOneResultView;

export type GradeHorarioOfertaFormacaoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type GradeHorarioOfertaFormacaoFindOneByIdResponse = GradeHorarioOfertaFormacaoFindOneResultView;

export type GradeHorarioOfertaFormacaoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma oferta de formação.
   */
  requestBody: GradeHorarioOfertaFormacaoInputUpdateView;
};

export type GradeHorarioOfertaFormacaoUpdateOneByIdResponse = GradeHorarioOfertaFormacaoFindOneResultView;

export type GradeHorarioOfertaFormacaoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type GradeHorarioOfertaFormacaoDeleteOneByIdResponse = boolean;

export type GradeHorarioOfertaFormacaoIntervaloDeTempoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoListResponse = GradeHorarioOfertaFormacaoIntervaloDeTempoListResultView;

export type GradeHorarioOfertaFormacaoIntervaloDeTempoCreateData = {
  /**
   * Dados de entrada para a criação de uma oferta de formação.
   */
  requestBody: GradeHorarioOfertaFormacaoIntervaloDeTempoInputCreateView;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoCreateResponse = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView;

export type GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneByIdResponse = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView;

export type GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma oferta de formação.
   */
  requestBody: GradeHorarioOfertaFormacaoIntervaloDeTempoInputUpdateView;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoUpdateOneByIdResponse = GradeHorarioOfertaFormacaoIntervaloDeTempoFindOneResultView;

export type GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type GradeHorarioOfertaFormacaoIntervaloDeTempoDeleteOneByIdResponse = boolean;

export type EventoListData = {
  filterCalendarioId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type EventoListResponse = EventoListResultView;

export type EventoCreateData = {
  /**
   * Dados de entrada para a criação de um Evento.
   */
  requestBody: EventoInputCreateView;
};

export type EventoCreateResponse = EventoFindOneResultView;

export type EventoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type EventoFindOneByIdResponse = EventoFindOneResultView;

export type EventoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um Evento.
   */
  requestBody: EventoInputUpdateView;
};

export type EventoUpdateOneByIdResponse = EventoFindOneResultView;

export type EventoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type EventoDeleteOneByIdResponse = boolean;

export type DiaCalendarioListData = {
  filterCalendarioId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DiaCalendarioListResponse = DiaCalendarioListResultView;

export type DiaCalendarioCreateData = {
  /**
   * Dados de entrada para a criação de um DiaCalendario.
   */
  requestBody: DiaCalendarioInputCreateView;
};

export type DiaCalendarioCreateResponse = DiaCalendarioFindOneResultView;

export type DiaCalendarioFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiaCalendarioFindOneByIdResponse = DiaCalendarioFindOneResultView;

export type DiaCalendarioUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um DiaCalendario.
   */
  requestBody: DiaCalendarioInputUpdateView;
};

export type DiaCalendarioUpdateOneByIdResponse = DiaCalendarioFindOneResultView;

export type DiaCalendarioDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiaCalendarioDeleteOneByIdResponse = boolean;

export type EtapaListData = {
  filterCalendarioId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type EtapaListResponse = EtapaListResultView;

export type EtapaCreateData = {
  /**
   * Dados de entrada para a criação de uma Etapa.
   */
  requestBody: EtapaInputCreateView;
};

export type EtapaCreateResponse = EtapaFindOneResultView;

export type EtapaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type EtapaFindOneByIdResponse = EtapaFindOneResultView;

export type EtapaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Etapa.
   */
  requestBody: EtapaInputUpdateView;
};

export type EtapaUpdateOneByIdResponse = EtapaFindOneResultView;

export type EtapaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type EtapaDeleteOneByIdResponse = boolean;

export type TurmaListData = {
  filterAmbientePadraoAulaCapacidade?: Array<string>;
  filterAmbientePadraoAulaCodigo?: Array<string>;
  filterAmbientePadraoAulaNome?: Array<string>;
  filterAmbientePadraoAulaTipo?: Array<string>;
  filterCursoCampusId?: Array<string>;
  filterCursoModalidadeId?: Array<string>;
  filterCursoNome?: Array<string>;
  filterCursoNomeAbreviado?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type TurmaListResponse = TurmaListResultView;

export type TurmaCreateData = {
  /**
   * Dados de entrada para a criação de uma Turma.
   */
  requestBody: TurmaInputCreateView;
};

export type TurmaCreateResponse = TurmaFindOneResultView;

export type TurmaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaFindOneByIdResponse = TurmaFindOneResultView;

export type TurmaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Turma.
   */
  requestBody: TurmaInputUpdateView;
};

export type TurmaUpdateOneByIdResponse = TurmaFindOneResultView;

export type TurmaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaDeleteOneByIdResponse = boolean;

export type TurmaGetImagemCapaData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaGetImagemCapaResponse = Blob | File;

export type TurmaSetImagemCapaData = {
  formData: {
    file: unknown;
  };
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaSetImagemCapaResponse = boolean;

export type DiarioListData = {
  filterAmbientePadraoId?: Array<string>;
  filterCalendarioLetivoId?: Array<string>;
  filterDisciplinaId?: Array<string>;
  filterTurmaId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DiarioListResponse = DiarioListResultView;

export type DiarioCreateData = {
  /**
   * Dados de entrada para a criação de um diário.
   */
  requestBody: DiarioInputCreateView;
};

export type DiarioCreateResponse = DiarioFindOneResultView;

export type DiarioFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioFindOneByIdResponse = DiarioFindOneResultView;

export type DiarioUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um diário.
   */
  requestBody: DiarioInputUpdateView;
};

export type DiarioUpdateOneByIdResponse = DiarioFindOneResultView;

export type DiarioDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioDeleteOneByIdResponse = boolean;

export type DiarioProfessorListData = {
  filterDiarioId?: Array<string>;
  filterPerfilId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DiarioProfessorListResponse = DiarioProfessorListResultView;

export type DiarioProfessorCreateData = {
  /**
   * Dados de entrada para a criação de um DiarioProfessor.
   */
  requestBody: DiarioProfessorInputCreateView;
};

export type DiarioProfessorCreateResponse = DiarioProfessorFindOneResultView;

export type DiarioProfessorFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioProfessorFindOneByIdResponse = DiarioProfessorFindOneResultView;

export type DiarioProfessorUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um DiarioProfessor.
   */
  requestBody: DiarioProfessorInputUpdateView;
};

export type DiarioProfessorUpdateOneByIdResponse = DiarioProfessorFindOneResultView;

export type DiarioProfessorDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioProfessorDeleteOneByIdResponse = boolean;

export type AulaListData = {
  filterAmbienteId?: Array<string>;
  filterDiarioId?: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type AulaListResponse = AulaListResultView;

export type AulaCreateData = {
  /**
   * Dados de entrada para a criação de uma Aula.
   */
  requestBody: AulaInputCreateView;
};

export type AulaCreateResponse = AulaFindOneResultView;

export type AulaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AulaFindOneByIdResponse = AulaFindOneResultView;

export type AulaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Aula.
   */
  requestBody: AulaInputUpdateView;
};

export type AulaUpdateOneByIdResponse = AulaFindOneResultView;

export type AulaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type AulaDeleteOneByIdResponse = boolean;

export type DisponibilidadeListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DisponibilidadeListResponse = DisponibilidadeListResultView;

export type DisponibilidadeCreateData = {
  /**
   * Dados de entrada para a criação de uma Disponibilidade.
   */
  requestBody: DisponibilidadeInputCreateView;
};

export type DisponibilidadeCreateResponse = DisponibilidadeFindOneResultView;

export type DisponibilidadeFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisponibilidadeFindOneByIdResponse = DisponibilidadeFindOneResultView;

export type DisponibilidadeUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma Disponibilidade.
   */
  requestBody: DisponibilidadeInputUpdateView;
};

export type DisponibilidadeUpdateOneByIdResponse = DisponibilidadeFindOneResultView;

export type DisponibilidadeDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DisponibilidadeDeleteOneByIdResponse = boolean;

export type DiarioPreferenciaAgrupamentoListData = {
  filterDiarioId: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type DiarioPreferenciaAgrupamentoListResponse = DiarioPreferenciaAgrupamentoListResultView;

export type DiarioPreferenciaAgrupamentoCreateData = {
  /**
   * Dados de entrada para a criação de um DiarioPreferenciaAgrupamento.
   */
  requestBody: DiarioPreferenciaAgrupamentoInputCreateView;
};

export type DiarioPreferenciaAgrupamentoCreateResponse = DiarioPreferenciaAgrupamentoFindOneResultView;

export type DiarioPreferenciaAgrupamentoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioPreferenciaAgrupamentoFindOneByIdResponse = DiarioPreferenciaAgrupamentoFindOneResultView;

export type DiarioPreferenciaAgrupamentoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um DiarioPreferenciaAgrupamento.
   */
  requestBody: DiarioPreferenciaAgrupamentoInputUpdateView;
};

export type DiarioPreferenciaAgrupamentoUpdateOneByIdResponse = DiarioPreferenciaAgrupamentoFindOneResultView;

export type DiarioPreferenciaAgrupamentoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type DiarioPreferenciaAgrupamentoDeleteOneByIdResponse = boolean;

export type TurmaDisponibilidadeListData = {
  filterTurmaId: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type TurmaDisponibilidadeListResponse = TurmaDisponibilidadeListResultView;

export type TurmaDisponibilidadeCreateData = {
  /**
   * Dados de entrada para a criação de uma TurmaDisponibilidade.
   */
  requestBody: TurmaDisponibilidadeInputCreateView;
};

export type TurmaDisponibilidadeCreateResponse = TurmaDisponibilidadeFindOneResultView;

export type TurmaDisponibilidadeFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaDisponibilidadeFindOneByIdResponse = TurmaDisponibilidadeFindOneResultView;

export type TurmaDisponibilidadeUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma TurmaDisponibilidade.
   */
  requestBody: TurmaDisponibilidadeInputUpdateView;
};

export type TurmaDisponibilidadeUpdateOneByIdResponse = TurmaDisponibilidadeFindOneResultView;

export type TurmaDisponibilidadeDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type TurmaDisponibilidadeDeleteOneByIdResponse = boolean;

export type ProfessorDisponibilidadeListData = {
  filterProfessorId: Array<string>;
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type ProfessorDisponibilidadeListResponse = ProfessorDisponibilidadeListResultView;

export type ProfessorDisponibilidadeCreateData = {
  /**
   * Dados de entrada para a criação de uma ProfessorDisponibilidade.
   */
  requestBody: ProfessorDisponibilidadeInputCreateView;
};

export type ProfessorDisponibilidadeCreateResponse = ProfessorDisponibilidadeFindOneResultView;

export type ProfessorDisponibilidadeFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ProfessorDisponibilidadeFindOneByIdResponse = ProfessorDisponibilidadeFindOneResultView;

export type ProfessorDisponibilidadeUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de uma ProfessorDisponibilidade.
   */
  requestBody: ProfessorDisponibilidadeInputUpdateView;
};

export type ProfessorDisponibilidadeUpdateOneByIdResponse = ProfessorDisponibilidadeFindOneResultView;

export type ProfessorDisponibilidadeDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type ProfessorDisponibilidadeDeleteOneByIdResponse = boolean;

export type HorarioGeradoListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type HorarioGeradoListResponse = HorarioGeradoListResultView;

export type HorarioGeradoCreateData = {
  /**
   * Dados de entrada para a criação de um HorarioGerado.
   */
  requestBody: HorarioGeradoInputCreateView;
};

export type HorarioGeradoCreateResponse = HorarioGeradoFindOneResultView;

export type HorarioGeradoFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoFindOneByIdResponse = HorarioGeradoFindOneResultView;

export type HorarioGeradoUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um HorarioGerado.
   */
  requestBody: HorarioGeradoInputUpdateView;
};

export type HorarioGeradoUpdateOneByIdResponse = HorarioGeradoFindOneResultView;

export type HorarioGeradoDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoDeleteOneByIdResponse = boolean;

export type HorarioGeradoAulaListData = {
  /**
   * Limite da quantidade de resultados por página.
   */
  limit?: number;
  /**
   * Página de consulta.
   */
  page?: number;
  /**
   * Busca textual.
   */
  search?: string;
  /**
   * Ordenação.
   */
  sortBy?: Array<string>;
};

export type HorarioGeradoAulaListResponse = HorarioGeradoAulaListResultView;

export type HorarioGeradoAulaCreateData = {
  /**
   * Dados de entrada para a criação de um HorarioGeradoAula.
   */
  requestBody: HorarioGeradoAulaInputCreateView;
};

export type HorarioGeradoAulaCreateResponse = HorarioGeradoAulaFindOneResultView;

export type HorarioGeradoAulaFindOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoAulaFindOneByIdResponse = HorarioGeradoAulaFindOneResultView;

export type HorarioGeradoAulaUpdateOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
  /**
   * Dados de entrada para a atualização de um HorarioGeradoAula.
   */
  requestBody: HorarioGeradoAulaInputUpdateView;
};

export type HorarioGeradoAulaUpdateOneByIdResponse = HorarioGeradoAulaFindOneResultView;

export type HorarioGeradoAulaDeleteOneByIdData = {
  /**
   * Identificador do registro (uuid).
   */
  id: string;
};

export type HorarioGeradoAulaDeleteOneByIdResponse = boolean;
